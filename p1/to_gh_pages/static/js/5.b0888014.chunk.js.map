{"version":3,"sources":["utils/validate/validator.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","images/user.png","components/hoc/withAuthRedirect.jsx","components/Login/Login.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfilePhoto.jsx","components/Profile/Profile.module.css","components/Profile/ProfileEditForm.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","length","maxLenCreator","maxLen","minLenCreator","minLen","FormControl","input","meta","touched","error","elType","props","hasError","className","styles","formControls","React","createElement","Textarea","Input","Hidden","type","createMyField","placeholder","component","name","validators","text","validate","module","exports","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","PhotoUpload","onChange","e","console","log","target","files","updateProfilePhoto","src","photo","alt","ProfileEditForm","profile","handleSubmit","onSubmit","c","form_name","Field","ProfileEditReduxForm","reduxForm","form","Profile","memo","status","userID","profileUpdatedToggle","co","contacts","isOwner","userId","useState","editMode","setEditMode","useEffect","toggleEditMode","setProfileUpdated","formData","out","aboutMe","facebook","github","instagram","mainLink","twitter","vk","website","youtube","lookingForAJob","lookingForAJobDescription","fullName","updateProfile","onClick","photos","large","defaultUserPhoto","keys","map","k","key","contactName","contactValue","Contact","compose","profilePage","initialValues","withRouter","getProfile","getStatus","history","userID2","match","params","Preloader"],"mappings":"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","file":"static/js/5.b0888014.chunk.js","sourcesContent":["export const required = value => {\n    if(value && value.length > 0) {\n        //console.log(value.length)\n        return undefined;\n    }\n    return 'required field';\n}\n\n\n\nexport const maxLenCreator = (maxLen) => (value) => {\n    if(value.length <= maxLen) return undefined;\n    return `max length ${maxLen} symbols`;\n}\n\nexport const minLenCreator = (minLen) => value => {\n    if(value.length >= minLen) return undefined;\n    return `min length ${minLen} symbols`;\n}\n\nexport const onlyNumbers = () => value => {\n    if(value.match(/[0-9]/)) return undefined;\n    return `i accept only numbers `;\n}\n\n","import React from 'react';\nimport styles from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\nimport {required} from \"../../../utils/validate/validator\";\n\nconst FormControl = ({input, meta: {touched,error}, elType, ...props}) => {\n    let hasError = touched && error;\n    // console.log(props)\n    return (\n        <div className={styles.formControls + \" \" + (hasError && styles.error)}>\n\n            <div>\n                {React.createElement(elType, {/*type:'file', */...input, ...props})}\n            </div>\n            {hasError && <span> {error}</span>}\n        </div>\n    )\n}\n\n/*\n\nReact.createElement(\n    \"input\", {\n        className: \"rating-input\", type: \"radio\", name: \"rate\", value: \"1\", ref: \"rating\", onChange: this.handleChange\n    }\n),\n*/\n\n\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='textarea' />\n}\nexport const Radio = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='input' type='radio'/>\n}\n/*\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/>\n    </FormControl>\n}*/\n/*\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}*/\n\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input'/>\n}\nexport const Hidden = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='hidden' />\n}\nexport const FileUpload = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='file'/>\n}\n\n\nexport const createMyField = (placeholder,component,name,validators, props = {}, text = '') =>\n    (\n        <div>\n            <Field\n                placeholder={placeholder}\n                component={component}\n                name={name}\n                validate={validators}\n                {...props}\n            /> {text}\n        </div>\n    )\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormsControls_formControls__MCv0m\",\"error\":\"FormsControls_error__9lcue\"};","module.exports = __webpack_public_path__ + \"static/media/user.d961d73a.png\";","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = ({auth}) => {\n    return {\n        isAuth: auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    const RedirectComponent = (props) => {\n        if(!props.isAuth) return <Redirect to={'/login'}/>;\n        return <Component {...props} />;\n    }\n    /*\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\n            return <Component {...this.props} />;\n        }\n    }*/\n\n    return connect(mapStateToProps)(RedirectComponent)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"captchaDiv\":\"Login_captchaDiv__36ONs\",\"noCaptcha\":\"Login_noCaptcha__nLUEK\",\"error\":\"Login_error__17Wu6\",\"noError\":\"Login_noError__3IZw_\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState,useEffect} from \"react\"\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport style from \"../Login/Login.module.css\";\nimport {FileUpload, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validate/validator\";\nimport {compose} from \"redux\";\nimport {checkAuthorization, login} from \"../../redux/auth_reducer\";\nimport {updateProfilePhoto} from \"../../redux/profile_reducer\";\n\n/*\nconst PhotoUpload = (props) => {\n    const onSubmit = (formData) => {\n        //\n        /!*if(props.auth.isAuth === false){\n            props.login(formData.email,formData.pass,formData.rememberMe,formData.captcha)\n        }else{\n            return <Redirect to={'/index'}/>\n        }*!/\n        console.log(formData)\n    }\n    return <div>\n        <PhotoUploadReduxForm onSubmit={onSubmit} {...props} />\n    </div>\n}*/\n\nconst PhotoUpload = (props) => {\n\n    // if(props.auth.isAuth === false){\n    //props.auth(formData.email,formData.pass,formData.rememberMe)\n\n    const onPhotoSelected = (e) =>{\n        console.log(e.target.files[0])\n        if(e.target.files.length)\n            props.updateProfilePhoto(e.target.files[0])\n    }\n\n    return <input onChange={onPhotoSelected}\n                   type={'file'} />;\n\n    /*\n}else{\n    return <Redirect to={'/index'}/>\n}*/\n\n\n}\n//\n// const PhotoUploadReduxForm = reduxForm({\n//     form: 'photoUpload'\n// })(PhotoUploadForm)\n\n\n\n\nlet ProfilePhoto = (props) => {\n\n    return <div>\n        <img src={props.photo} alt=\"\"/>\n        <PhotoUpload updateProfilePhoto={props.updateProfilePhoto}/>\n    </div>\n}\n\n\n\nexport default connect(null,{updateProfilePhoto})(ProfilePhoto)\n\n// export default connect()(ProfilePhoto)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_name\":\"Profile_form_name__28H-a\",\"error\":\"Profile_error__2MfV7\"};","import React, {useState} from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {createMyField, Hidden, Input, Radio, Textarea} from \"../common/FormsControls/FormsControls\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport c from './Profile.module.css';\nimport {updateProfile} from \"../../redux/profile_reducer\";\n\n\nconst ProfileEditForm = ({profile, handleSubmit, error}) => {\n\n    // let errrs = (error ? error.split('|||') : []);\n\n    return <form onSubmit={handleSubmit}>\n        {/*{error ? <div className={c.error}>\n            {errrs.map((er) => {return <div>{er}</div>})}\n        </div> : ''}*/}\n\n        <button>Save</button>\n        <div className={c.form_name}>fullName:</div>{createMyField(null, Input, 'fullName', [])}\n        <div className={c.form_name}>aboutMe:</div>{createMyField(null, Input, 'aboutMe', [], )}\n        <div className={c.form_name}>facebook:</div>{createMyField(null, Input, 'facebook', [], )}\n        <div className={c.form_name}>github:</div>{createMyField(null, Input, 'github', [], )}\n        <div className={c.form_name}>instagram:</div>{createMyField(null, Input, 'instagram', [], )}\n        <div className={c.form_name}>mainLink:</div>{createMyField(null, Input, 'mainLink', [], )}\n        <div className={c.form_name}>twitter:</div>{createMyField(null, Input, 'twitter', [], )}\n        <div className={c.form_name}>vk:</div>{createMyField(null, Input, 'vk', [], )}\n        <div className={c.form_name}>website:</div>{createMyField(null, Input, 'website', [], )}\n        <div className={c.form_name}>youtube:</div>{createMyField(null, Input, 'youtube', [], )}\n        <div className={c.form_name}>Я ищу работу:</div>\n        {/*{createMyField(null, Radio, 'lookingForAJob', [], {label: 'Yes', },'Да')}*/}\n        {/*{createMyField(null, Radio, 'lookingForAJob', [], {label: 'No', },'Нет')}*/}\n        <label><Field name=\"lookingForAJob\" component={Input} type=\"radio\" value=\"1\"/> Yes</label>\n        <label><Field name=\"lookingForAJob\" component={Input} type=\"radio\" value=\"0\"/> No</label><br/>\n        <div className={c.form_name}>Описание для искомой работы:</div>{createMyField(null, Textarea, 'lookingForAJobDescription', [], )}\n\n\n        {/*<button>Save</button>*/}\n    </form>\n}\n\n/*\n\"aboutMe\": formData.aboutMe,\n    \"contacts\": {\n    facebook: formData.facebook,\n        github: formData.github,\n        instagram: formData.instagram,\n        mainLink: formData.mainLink,\n        twitter: formData.twitter,\n        vk: formData.vk,\n        website: formData.website,\n        youtube: formData.youtube\n},\n\"lookingForAJob\": formData.lookingForAJob === '1',\n    \"lookingForAJobDescription\": formData.lookingForAJobDescription,\n    \"fullName\": formData.fullName*/\n\nexport default ProfileEditForm\n","import React, {useEffect, useState} from \"react\";\nimport defaultUserPhoto from \"../../images/user.png\";\nimport ProfilePhoto from \"./ProfilePhoto\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {createMyField, Hidden, Input, Radio, Textarea} from \"../common/FormsControls/FormsControls\";\nimport {Redirect} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {checkAuthorization, login} from \"../../redux/auth_reducer\";\nimport c from './Profile.module.css';\nimport {setProfileUpdated, updateProfile} from \"../../redux/profile_reducer\";\nimport style from \"../Login/Login.module.css\";\nimport {setInitialized} from \"../../redux/app_reducer\";\n// import ProfileEditReduxForm from \"./ProfileEditForm\";\nimport ProfileEditForm from \"./ProfileEditForm\";\n\n\n/*\n {\n    \"aboutMe\": \"я круто чувак 1001%\",\n    \"contacts\": {\n        facebook: \"facebook.com\",\n        github: \"github.com\",\n        instagram: \"instagra.com/sds\",\n        mainLink: null,\n        twitter: \"https://twitter.com/@sdf\",\n        vk: \"vk.com/dimych\",\n        website: null,\n        youtube: null\n    },\n    \"lookingForAJob\": true,\n    \"lookingForAJobDescription\": 'не ищу',\n    \"fullName\": \"samurai d\"\n}\n */\n\n\nconst ProfileEditReduxForm = reduxForm({\n    form: 'profileEdit'\n})(ProfileEditForm)\n\n//\n// const mapStateToProps = ({profilePage}) => {\n//     //debugger\n//\n//     let co = profilePage.profile.contacts;\n//     return {\n//         initialValues: {\n//             fullName: profilePage.profile.fullName,\n//             aboutMe: profilePage.profile.aboutMe,\n//             facebook: co.facebook,\n//             github: co.github,\n//             instagram: co.instagram,\n//             mainLink: co.mainLink,\n//             twitter: co.twitter,\n//             vk: co.vk,\n//             website: co.website,\n//             youtube: co.youtube,\n//             lookingForAJob: profilePage.profile.lookingForAJob ? '1' : '0',\n//             lookingForAJobDescription: profilePage.profile.lookingForAJobDescription,\n//\n//         },\n//\n//         //capthaImg: props.capthaImg\n//     }\n// };\n\nconst Profile = React.memo((props) => {\n    let {profile,status,userID,profileUpdatedToggle} = props;\n    let co = profile.contacts;\n    let isOwner = (userID === profile.userId);\n\n    // let [isOwner, setIsOwner] = useState(0); // hook\n    let [editMode,setEditMode] = useState(false); // hook\n\n\n    useEffect( () => {\n        console.log('new profile');\n        console.log(profileUpdatedToggle);\n\n        if(profileUpdatedToggle) {\n            toggleEditMode();\n            props.setProfileUpdated(false);\n        }\n\n    }, [profileUpdatedToggle]); // якщо написати [examples], то скрипт буде бомбити сервер запитами \"чи не змінились екзампли\"\n\n\n\n    const toggleEditMode = () => {\n        if( editMode === false)\n            setEditMode(true);\n        else{\n            setEditMode(false);\n            //setStatus(tempStatus);\n        }\n    }\n\n\n    const onSubmit = (formData) => { //formData\n        //\n        /*if (props.auth.isAuth === false) {\n            props.login(email, pass, rememberMe, captcha)\n        } else {\n            return <Redirect to={'/index'}/>\n        }*/\n\n        let out = {\n            \"userId\": profile.userId,\n            \"aboutMe\": formData.aboutMe,\n            \"contacts\": {\n                facebook: formData.facebook,\n                github: formData.github,\n                instagram: formData.instagram,\n                mainLink: formData.mainLink,\n                twitter: formData.twitter,\n                vk: formData.vk,\n                website: formData.website,\n                youtube: formData.youtube\n            },\n            \"lookingForAJob\": formData.lookingForAJob === '1',\n            \"lookingForAJobDescription\": formData.lookingForAJobDescription,\n            \"fullName\": formData.fullName\n        }\n        // formData.lookingForAJob = formData.lookingForAJob === '1'\n        // console.log(formData)\n        //  console.log(out)\n         // console.log('test1')\n        props.updateProfile(out);\n        // console.log('test2')\n        // debugger\n\n        //     prom.then(\n        //         ()=>{\n        //             toggleEditMode();\n        //             console.log(prom)\n        //\n        //         }\n        //     );\n        // let data = await Promise.all([prom])\n        //     .then( () => {\n        //         console.log(prom)\n        //         toggleEditMode();\n        //     })\n    }\n\n\n    // console.log('isOwner - '+isOwner + ' - +' + userID+ '+ - +' + profile.userId+'+')\n\n    return <div>\n        {\n            /*isOwner ? (\n                editMode ? <div>\n                    edit form\n                    <button onClick={toggleEditMode}>Save</button>\n                </div>\n                    : <div><button onClick={toggleEditMode}>Edit Profile</button><br/></div>\n            ) : ''\n*/\n\n            isOwner && editMode\n            ? <div>\n                    {/*<ProfileEditReduxForm onSubmit={onSubmit} initialValues={profile} {...props} />*/}\n                    <ProfileEditReduxForm onSubmit={onSubmit} {...props} />\n            </div>\n            : <div>\n                    {isOwner ? <div><button onClick={toggleEditMode}>Edit Profile</button><br/></div> : ''}\n            <img src={profile.photos.large ? profile.photos.large : defaultUserPhoto} alt=\"\"/>\n            <div><b>{profile.fullName}</b></div>\n                    <div><u>Статус:</u> {status}</div>\n            <div><u>Обо мне:</u> \"{profile.aboutMe}\"</div>\n            <div><u>Ищу работу:</u> \"{profile.lookingForAJob ? 'Да' : 'Нет'}\"<br/>\n                {profile.lookingForAJobDescription}\n            </div>\n                    { // show only if there is at least one contact\n                        co.facebook ||\n                        co.github ||\n                        co.instagram ||\n                        co.vk ||\n                        co.mainLink ||\n                        co.twitter ||\n                        co.youtube ||\n                        co.website ? <><b>Мои контакты:</b> <br/></> : ''\n                    }\n\n                    {Object.keys(co).map((k)=>{\n                        return <Contact key={k} contactName={k} contactValue={co[k]}/>\n                    })}\n\n                    {/*{co.facebook ? <div><u>FB:</u> {co.facebook}</div> : ''}*/}\n                    {/*{co.github ? <div><u>GH:</u> {co.github}</div> : ''}*/}\n                    {/*{co.instagram ? <div><u>INST:</u> {co.instagram}</div> : ''}*/}\n                    {/*{co.vk ? <div><u>VK:</u> {co.vk}</div> : ''}*/}\n                    {/*{co.mainLink ? <div><u>mainLink:</u> {co.mainLink}</div> : ''}*/}\n                    {/*{co.twitter ? <div><u>TW:</u> {co.twitter}</div> : ''}*/}\n                    {/*{co.youtube ? <div><u>YT:</u> {co.youtube}</div> : ''}*/}\n                    {/*{co.website ? <div><u>Site:</u> <a href={co.website}>{co.website}</a></div> : ''}*/}\n            </div>\n        }\n\n    </div>;\n});\n\nconst Contact = ({contactName,contactValue}) => {\n    return <div><u>{contactName}:</u> {contactValue}</div>\n}\n\n/*\nObject { gb: {…}, chat: {…}, examples: {…}, users: {…}, profilePage: {…}, auth: {…}, form: {}, app: {…} }\n\napp: Object { initialized: true }\n\nauth: Object { userID: 11583, email: \"wd.co.ua@gmail.com\", login: \"WD8\", … }\n\ncaptchaAnswer: null\n\ncapthaImg: null\n\nemail: \"wd.co.ua@gmail.com\"\n\nisAuth: true\n\nlogin: \"WD8\"\n\nloginError: null\n\nuserID: 11583\n\nuserImg: null\n\n<prototype>: Object { … }\n\nchat: Object { chatPosts: (6) […], newChatPostText: \"this is Sparta!\" }\n\nexamples: Object { examplesList: (19) […] }\n\nform: Object {  }\n\ngb: Object { gbPosts: (2) […], newPostText: \"hi how are u?))\" }\n\nprofilePage: Object { profile: {…}, status: \"97\" }\n\nprofile: Object { aboutMe: \"Димыч, курсы - агонь!!!\", lookingForAJob: false, lookingForAJobDescription: \"уже есть\", … }\n\naboutMe: \"Димыч, курсы - агонь!!!\"\n\ncontacts: Object { facebook: \"\", website: \"localhost.com\", vk: \"\", … }\n\nfacebook: \"\"\n\ngithub: \"\"\n\ninstagram: \"\"\n\nmainLink: \"\"\n\ntwitter: \"\"\n\nvk: \"\"\n\nwebsite: \"localhost.com\"\n\nyoutube: \"\"\n\n<prototype>: Object { … }\n\nfullName: \"WD\"\n\nlookingForAJob: false\n\nlookingForAJobDescription: \"уже есть\"\n\nphotos: Object { small: \"https://social-network.samuraijs.com/activecontent/images/users/11583/user-small.jpg?v=6\", large: \"https://social-network.samuraijs.com/activecontent/images/users/11583/user.jpg?v=6\" }\n\nuserId: 11583\n\n<prototype>: Object { … }\n\nstatus: \"97\"\n\n<prototype>: Object { … }\n\nusers: Object { usersPerPage: 20, totalUsers: 11974, currentPage: 270, … }\n\n<prototype>: Object { … }\n\n\n*/\n\n/*\n\nдублюю верхнє\n\n\n\nconst Profile = React.memo((props) => {\n    return <div>\n        <img src={props.profile.photos.large} alt=\"\"/>\n        <div><b>{props.profile.fullName}</b></div>\n        <div>Статус: {props.status}</div>\n        <div>Обо мне: \"{props.profile.aboutMe}\"</div><br/>\n        Мои контакты: <br/>\n        <div>{props.co.facebook}</div>\n        <div>{props.co.github}</div>\n        <div>{props.co.instagram}</div>\n        <div>{props.co.vk}</div>\n\n    </div>;\n});\n\n\n*/\n\n/*\nабо\n\nclass Profile extends PureComponent {\n\n    render() {\n        return <div>\n            <img src={this.props.profile.photos.large} alt=\"\"/>\n            <div><b>{this.props.profile.fullName}</b></div>\n            <div>Статус: {this.props.status}</div>\n            <div>Обо мне: \"{this.props.profile.aboutMe}\"</div><br/>\n            Мои контакты: <br/>\n            <div>{this.props.co.facebook}</div>\n            <div>{this.props.co.github}</div>\n            <div>{this.props.co.instagram}</div>\n            <div>{this.props.co.vk}</div>\n\n        </div>;\n    }\n}\n\n*/\n\n\n/*\n\nабо\n\n\nclass Profile extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps != this.props || nextState != this.state;\n    }\n\n    render() {\n        return <div>\n            <img src={this.props.profile.photos.large} alt=\"\"/>\n            <div><b>{this.props.profile.fullName}</b></div>\n            <div>Статус: {this.props.status}</div>\n            <div>Обо мне: \"{this.props.profile.aboutMe}\"</div><br/>\n            Мои контакты: <br/>\n            <div>{this.props.co.facebook}</div>\n            <div>{this.props.co.github}</div>\n            <div>{this.props.co.instagram}</div>\n            <div>{this.props.co.vk}</div>\n\n        </div>;\n    }\n}\n\n* */\n\n\n\n// export default Profile\n\n\nconst mapStateToProps = ({profilePage}) => {\n    //debugger\n\n    let co = profilePage.profile.contacts;\n    return {\n         initialValues: {\n            fullName: profilePage.profile.fullName,\n            aboutMe: profilePage.profile.aboutMe,\n            facebook: co.facebook,\n            github: co.github,\n            instagram: co.instagram,\n            mainLink: co.mainLink,\n            twitter: co.twitter,\n            vk: co.vk,\n            website: co.website,\n            youtube: co.youtube,\n            lookingForAJob: profilePage.profile.lookingForAJob ? '1' : '0',\n            lookingForAJobDescription: profilePage.profile.lookingForAJobDescription,\n\n         },\n\n        //capthaImg: props.capthaImg\n    }\n};\n/*\n\"aboutMe\": formData.aboutMe,\n    \"contacts\": {\n    facebook: formData.facebook,\n        github: formData.github,\n        instagram: formData.instagram,\n        mainLink: formData.mainLink,\n        twitter: formData.twitter,\n        vk: formData.vk,\n        website: formData.website,\n        youtube: formData.youtube\n},\n\"lookingForAJob\": formData.lookingForAJob === '1',\n    \"lookingForAJobDescription\": formData.lookingForAJobDescription,\n    \"fullName\": formData.fullName*/\n\nexport default compose(\n    connect(mapStateToProps, {updateProfile,setProfileUpdated}),\n)(Profile)\n","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus} from \"../../redux/profile_reducer\";\nimport Preloader from \"../Preloader/Preloader\";\nimport {withRouter} from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst ProfileContainer = (props) => {\n\n    useEffect(() => {\n        // console.log('PC test');\n        let {getStatus, getProfile, userID, history, match} = props;\n        //this.props.setFetchingStatus(true);\n        let userID2 = match.params.userID;\n        // console.log('PC test2 - ' + userID2);\n            if (!userID2 && userID) userID2 = userID; // if no ID was passed script will show 'me'\n            // console.log('PC test2 - ' + userID2);\n        if (userID2) {\n            getStatus(userID2);\n            getProfile(userID2);\n\n        } else {\n            history.push('/login')\n        }\n\n    },[props.userID,props.match.params.userID]);\n\n\n\n\n    if (!props.profile)\n        return <Preloader/>\n\n    return <Profile {...props}/>\n\n}\n    /*\n\n    class ProfileContainer2 extends React.Component {\n\n        componentDidMount() {\n\n            let {getStatus, getProfile, userID, history, match} = this.props;\n            //this.props.setFetchingStatus(true);\n            let userID2 = match.params.userID;\n            if (!userID2 && userID) userID2 = userID\n            if (userID2) {\n                getStatus(userID2);\n                getProfile(userID2);\n            } else {\n                history.push('/login')\n            }\n\n        }\n\n        componentDidUpdate(prevProps, prevState, snapshot) {\n\n            let {match, userID1, getStatus, getProfile, history} = this.props;\n            let p = match.url;\n            let pp = prevProps.match.url;\n            let s = this.state;\n\n            if (p !== pp) {\n                let userID = match.params.userID;\n                if (!userID && userID1) userID = userID1\n                if (userID) {\n                    getStatus(userID);\n                    getProfile(userID);\n                } else {\n                    history.push('/login')\n                }\n\n            }\n\n        }\n\n        render() {\n            // debugger\n            if (!this.props.profile)\n                return <Preloader/>\n\n            return <Profile {...this.props}/>;\n        }\n    }\n    */\n\nlet mapStateToProps = ({auth, profilePage}) => { // бере увесь глобальний STATE і повертає тільки те, що нам потрібно для цієї компоненти\n    return {\n        userID: auth.userID,\n        profile: profilePage.profile,\n        profileUpdatedToggle: profilePage.profileUpdatedToggle,\n        status: profilePage.status\n    }\n}\n\n//let ProfileContainerWithUrlData = (ProfileContainer);\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {\n        getProfile,\n        getStatus\n    }),\n    withAuthRedirect\n)(ProfileContainer)\n\n"],"sourceRoot":""}