{"version":3,"sources":["utils/validate/validator.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["required","value","length","maxLenCreator","maxLen","minLenCreator","minLen","FormControl","input","meta","touched","error","elType","props","hasError","className","styles","formControls","React","createElement","Textarea","Input","FileUpload","type","createMyField","placeholder","component","name","validators","text","validate","module","exports","Login","LoginReduxForm","onSubmit","email","pass","rememberMe","captcha","auth","isAuth","to","login","maxLen50","minLen2","reduxForm","form","handleSubmit","style","noError","captchaDiv","capthaImg","noCaptcha","alt","src","compose","connect","checkAuthorization"],"mappings":"wGAAA,sGAAO,IAAMA,EAAW,SAAAC,GACpB,KAAGA,GAASA,EAAMC,OAAS,GAI3B,MAAO,kBAKEC,EAAgB,SAACC,GAAD,OAAY,SAACH,GACtC,KAAGA,EAAMC,QAAUE,GACnB,MAAM,cAAN,OAAqBA,EAArB,cAGSC,EAAgB,SAACC,GAAD,OAAY,SAAAL,GACrC,KAAGA,EAAMC,QAAUI,GACnB,MAAM,cAAN,OAAqBA,EAArB,e,wOCZEC,G,OAAc,SAAC,GAAsD,IAArDC,EAAoD,EAApDA,MAAoD,IAA7CC,KAAOC,EAAsC,EAAtCA,QAAQC,EAA8B,EAA9BA,MAAQC,EAAsB,EAAtBA,OAAWC,EAAW,yCAClEC,EAAWJ,GAAWC,EAE1B,OACI,yBAAKI,UAAWC,IAAOC,aAAe,KAAOH,GAAYE,IAAOL,QAE5D,6BACKO,IAAMC,cAAcP,EAApB,2BAAiDJ,GAAUK,KAE/DC,GAAY,kCAAQH,MAOpBS,EAAW,SAACP,GACrB,OAAO,kBAACN,EAAD,iBAAiBM,EAAjB,CAAwBD,OAAO,eAiB7BS,EAAQ,SAACR,GAElB,OAAO,kBAACN,EAAD,iBAAiBM,EAAjB,CAAwBD,OAAO,YAM7BU,EAAa,SAACT,GAEvB,OAAO,kBAACN,EAAD,iBAAiBM,EAAjB,CAAwBD,OAAO,QAAQW,KAAK,WAI1CC,EAAgB,SAACC,EAAYC,EAAUC,EAAKC,GAA5B,IAAwCf,EAAxC,uDAAgD,GAAIgB,EAApD,uDAA2D,GAA3D,OAErB,6BACI,kBAAC,IAAD,eACIJ,YAAaA,EACbC,UAAWA,EACXC,KAAMA,EACNG,SAAUF,GACNf,IANZ,IAOQgB,K,oBC7DhBE,EAAOC,QAAU,CAAC,aAAe,oCAAoC,MAAQ,+B,oBCA7ED,EAAOC,QAAU,CAAC,WAAa,0BAA0B,UAAY,yBAAyB,MAAQ,qBAAqB,QAAU,yB,iCCDrI,uGAmCMC,EAAQ,SAACpB,GAUX,OAAO,6BACH,kGACA,kBAACqB,EAAD,eAAgBC,SAXH,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,MAAMC,EAA6B,EAA7BA,KAAKC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,QAErC,IAA0B,IAAtB1B,EAAM2B,KAAKC,OAGX,OAAO,kBAAC,IAAD,CAAUC,GAAI,WAFrB7B,EAAM8B,MAAMP,EAAOC,EAAMC,EAAYC,KAQD1B,MAG1C+B,EAAWzC,YAAc,IACzB0C,EAAUxC,YAAc,GAoCxB6B,EAAiBY,YAAU,CAC7BC,KAAM,QADaD,EAhCL,SAAC,GAAiC,IAAhCN,EAA+B,EAA/BA,KAAMQ,EAAyB,EAAzBA,aAAcrC,EAAW,EAAXA,MAEpC,OAAoB,IAAhB6B,EAAKC,OAEE,0BAAMN,SAAUa,GAEnB,yBAAKjC,WAAaJ,EAAwB,GAAhBsC,IAAMC,SAAgB,IAAMD,IAAMtC,OACvDA,GAEJa,YAAc,QAASH,IAAO,QAAS,CAACrB,IAAU4C,EAAUC,IAC5DrB,YAAc,OAAQH,IAAO,OAAQ,CAACrB,IAAU4C,EAAUC,GAAU,CAACtB,KAAM,aAG5E,yBAAKR,UAAWkC,IAAME,WAAa,KAAQX,EAAKY,UAA8B,GAAlBH,IAAMI,YAC9D,6BACI,yBAAKC,IAAI,UAAUC,IAAKf,EAAKY,UAAYZ,EAAKY,UAAY,MAE7D5B,YAAc,UAAWH,IAAO,UAAamB,EAAKY,UAAiB,CAACpD,IAAU4C,EAAUC,GAA1B,KAGlErB,YAAc,KAAMH,IAAO,aAAc,GAAI,CAACE,KAAM,YAAa,oFAClE,6BACI,0EAID,kBAAC,IAAD,CAAUmB,GAAI,cAmBdc,sBACXC,aAToB,SAAC,GAErB,MAAO,CACHjB,KAH4B,EAAVA,QASG,CAACG,UAAOe,yBADtBF,EA1FQ,SAAC3C,GAQpB,OAAO,kBAACoB,EAAUpB","file":"static/js/8.31fc70d7.chunk.js","sourcesContent":["export const required = value => {\n    if(value && value.length > 0) {\n        //console.log(value.length)\n        return undefined;\n    }\n    return 'required field';\n}\n\n\n\nexport const maxLenCreator = (maxLen) => (value) => {\n    if(value.length <= maxLen) return undefined;\n    return `max length ${maxLen} symbols`;\n}\n\nexport const minLenCreator = (minLen) => value => {\n    if(value.length >= minLen) return undefined;\n    return `min length ${minLen} symbols`;\n}\n\nexport const onlyNumbers = () => value => {\n    if(value.match(/[0-9]/)) return undefined;\n    return `i accept only numbers `;\n}\n\n","import React from 'react';\nimport styles from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\nimport {required} from \"../../../utils/validate/validator\";\n\nconst FormControl = ({input, meta: {touched,error}, elType, ...props}) => {\n    let hasError = touched && error;\n\n    return (\n        <div className={styles.formControls + \" \" + (hasError && styles.error)}>\n\n            <div>\n                {React.createElement(elType, {/*type:'file', */...input, ...props})}\n            </div>\n            {hasError && <span> {error}</span>}\n        </div>\n    )\n}\n\n\n\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='textarea'/>\n}\n/*\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/>\n    </FormControl>\n}*/\n/*\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}*/\n\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input'/>\n}\nexport const Hidden = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' />\n}\nexport const FileUpload = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='file'/>\n}\n\n\nexport const createMyField = (placeholder,component,name,validators, props = {}, text = '') =>\n    (\n        <div>\n            <Field\n                placeholder={placeholder}\n                component={component}\n                name={name}\n                validate={validators}\n                {...props}\n            /> {text}\n        </div>\n    )\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormsControls_formControls__MCv0m\",\"error\":\"FormsControls_error__9lcue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"captchaDiv\":\"Login_captchaDiv__36ONs\",\"noCaptcha\":\"Login_noCaptcha__nLUEK\",\"error\":\"Login_error__17Wu6\",\"noError\":\"Login_noError__3IZw_\"};","import React, {useEffect} from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {login, checkAuthorization} from \"../../redux/auth_reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {createMyField, Input} from \"../common/FormsControls/FormsControls\";\nimport {maxLenCreator, minLenCreator, onlyNumbers, required} from \"../../utils/validate/validator\";\nimport style from \"./Login.module.css\"\n\nconst LoginContainer = (props) => {\n\n    // useEffect(() => {\n    //     let p = this.props;\n    //     let s = this.state;\n    // },[])\n\n\n    return <Login {...props}/>\n}\n\n// class LoginContainer extends React.Component { // зробив для тесту, можна і без цього класу\n//\n//     componentDidUpdate(prevProps, prevState, snapshot) {\n//         let p = this.props;\n//         let s = this.state;\n//         //debugger\n//         // todo не працює при лог-ауті на сайті\n//     }\n//\n//     render() {\n//         return <Login {...this.props}/>\n//     }\n// }\n\nconst Login = (props) => {\n    const onSubmit = ({email,pass,rememberMe,captcha}) => { //formData\n        //\n        if (props.auth.isAuth === false) {\n            props.login(email, pass, rememberMe, captcha)\n        } else {\n            return <Redirect to={'/index'}/>\n        }\n        // console.log(formData)\n    }\n    return <div>\n        <h1>Авторизація</h1>\n        <LoginReduxForm onSubmit={onSubmit} {...props} />\n    </div>\n}\nconst maxLen50 = maxLenCreator(50);\nconst minLen2 = minLenCreator(2);\n// const numOnly = onlyNumbers();\n\n\nconst LoginForm = ({auth, handleSubmit, error}) => {\n\n    if (auth.isAuth === false) {\n\n        return <form onSubmit={handleSubmit}>\n\n            <div className={(!error ? style.noError : '') + ' ' + style.error}>\n                {error}\n            </div>\n            {createMyField('email', Input, 'email', [required, maxLen50, minLen2])}\n            {createMyField('pass', Input, 'pass', [required, maxLen50, minLen2], {type: 'password'})}\n\n\n            <div className={style.captchaDiv + ' ' + (!auth.capthaImg ? style.noCaptcha : '')}>\n                <div>\n                    <img alt='captcha' src={auth.capthaImg ? auth.capthaImg : ''}/>\n                </div>\n                {createMyField('cAp7cH4', Input, 'captcha', (!auth.capthaImg ? [] : [required, maxLen50, minLen2]))}\n            </div>\n\n            {createMyField(null, Input, 'rememberMe', [], {type: 'checkbox'}, \"Запам'ятай мене\")}\n            <div>\n                <button>Увійти</button>\n            </div>\n        </form>\n    } else {\n        return <Redirect to={'/index'}/>\n    }\n\n\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'auth'\n})(LoginForm)\n\n\nconst mapStateToProps = ({auth}) => {\n    //debugger\n    return {\n        auth: auth,\n        //capthaImg: props.capthaImg\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {login, checkAuthorization}),\n)(LoginContainer)\n\n//\n// export default () => {\n//     return <>\n//         <a href={`https://social-network.samuraijs.com/login`} target={`_blank`}>Потрібна авторизація</a>\n//     </>\n// }"],"sourceRoot":""}