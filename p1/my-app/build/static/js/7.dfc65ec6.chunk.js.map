{"version":3,"sources":["utils/validate/validator.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","images/user.png","components/hoc/withAuthRedirect.jsx","components/Login/Login.module.css","components/Profile/ProfilePhoto.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","length","maxLenCreator","maxLen","minLenCreator","minLen","FormControl","input","meta","touched","error","elType","props","hasError","className","styles","formControls","React","createElement","Textarea","Input","FileUpload","type","createMyField","placeholder","component","name","validators","text","validate","module","exports","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","to","PhotoUpload","PhotoUploadReduxForm","onSubmit","formData","console","log","reduxForm","form","handleSubmit","style","noError","src","photo","alt","Profile","memo","profile","status","photos","large","defaultUserPhoto","fullName","aboutMe","contacts","facebook","github","instagram","vk","compose","withRouter","profilePage","userID","getProfile","getStatus","useEffect","history","userID2","match","params","push","Preloader"],"mappings":"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","file":"static/js/7.dfc65ec6.chunk.js","sourcesContent":["export const required = value => {\n    if(value && value.length > 0) {\n        //console.log(value.length)\n        return undefined;\n    }\n    return 'required field';\n}\n\n\n\nexport const maxLenCreator = (maxLen) => (value) => {\n    if(value.length <= maxLen) return undefined;\n    return `max length ${maxLen} symbols`;\n}\n\nexport const minLenCreator = (minLen) => value => {\n    if(value.length >= minLen) return undefined;\n    return `min length ${minLen} symbols`;\n}\n\nexport const onlyNumbers = () => value => {\n    if(value.match(/[0-9]/)) return undefined;\n    return `i accept only numbers `;\n}\n\n","import React from 'react';\nimport styles from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\nimport {required} from \"../../../utils/validate/validator\";\n\nconst FormControl = ({input, meta: {touched,error}, elType, ...props}) => {\n    let hasError = touched && error;\n\n    return (\n        <div className={styles.formControls + \" \" + (hasError && styles.error)}>\n\n            <div>\n                {React.createElement(elType, {/*type:'file', */...input, ...props})}\n            </div>\n            {hasError && <span> {error}</span>}\n        </div>\n    )\n}\n\n\n\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='textarea'/>\n}\n/*\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/>\n    </FormControl>\n}*/\n/*\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}*/\n\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input'/>\n}\nexport const Hidden = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' />\n}\nexport const FileUpload = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='file'/>\n}\n\n\nexport const createMyField = (placeholder,component,name,validators, props = {}, text = '') =>\n    (\n        <div>\n            <Field\n                placeholder={placeholder}\n                component={component}\n                name={name}\n                validate={validators}\n                {...props}\n            /> {text}\n        </div>\n    )\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormsControls_formControls__MCv0m\",\"error\":\"FormsControls_error__9lcue\"};","module.exports = __webpack_public_path__ + \"static/media/user.d961d73a.png\";","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = ({auth}) => {\n    return {\n        isAuth: auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    const RedirectComponent = (props) => {\n        if(!props.isAuth) return <Redirect to={'/login'}/>;\n        return <Component {...props} />;\n    }\n    /*\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\n            return <Component {...this.props} />;\n        }\n    }*/\n\n    return connect(mapStateToProps)(RedirectComponent)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"captchaDiv\":\"Login_captchaDiv__36ONs\",\"noCaptcha\":\"Login_noCaptcha__nLUEK\",\"error\":\"Login_error__17Wu6\",\"noError\":\"Login_noError__3IZw_\"};","import React, {useState,useEffect} from \"react\"\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport style from \"../Login/Login.module.css\";\nimport {FileUpload, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validate/validator\";\n\n\nconst PhotoUpload = (props) => {\n    const onSubmit = (formData) => {\n        //\n        /*if(props.auth.isAuth === false){\n            props.login(formData.email,formData.pass,formData.rememberMe,formData.captcha)\n        }else{\n            return <Redirect to={'/index'}/>\n        }*/\n        console.log(formData)\n    }\n    return <div>\n        <PhotoUploadReduxForm onSubmit={onSubmit} {...props} />\n    </div>\n}\n\nconst PhotoUploadForm = (props) => {\n\n    // if(props.auth.isAuth === false){\n    //props.auth(formData.email,formData.pass,formData.rememberMe)\n\n    return <form onSubmit={props.handleSubmit}>\n\n        <div className={( !props.error ? style.noError : '') + ' ' + style.error}>\n            { props.error}\n        </div>\n\n        <div>\n            <Field placeholder=\"photo\" component={FileUpload} name='photo' validate={[required]}/>\n        </div>\n\n        <div>\n            <button>Аплоад</button>\n        </div>\n    </form>\n    /*\n}else{\n    return <Redirect to={'/index'}/>\n}*/\n\n\n}\n\nconst PhotoUploadReduxForm = reduxForm({\n    form: 'photoUpload'\n})(PhotoUploadForm)\n\n\n\n\nlet ProfilePhoto = (props) => {\n\n    return <div>\n        <img src={props.photo} alt=\"\"/>\n        <PhotoUpload />\n    </div>\n}\n\nexport default connect()(ProfilePhoto)","import React from \"react\";\nimport defaultUserPhoto from \"../../images/user.png\";\nimport ProfilePhoto from \"./ProfilePhoto\";\n\nconst Profile = React.memo((props) => {\n    let {profile,status} = props;\n    return <div>\n        <img src={profile.photos.large ? profile.photos.large : defaultUserPhoto} alt=\"\"/>\n        <div><b>{profile.fullName}</b></div>\n        <div>Статус: {status}</div>\n        <div>Обо мне: \"{profile.aboutMe}\"</div><br/>\n        Мои контакты: <br/>\n        <div>{profile.contacts.facebook}</div>\n        <div>{profile.contacts.github}</div>\n        <div>{profile.contacts.instagram}</div>\n        <div>{profile.contacts.vk}</div>\n\n    </div>;\n});\n\n/*\n\nдублюю верхнє\n\n\n\nconst Profile = React.memo((props) => {\n    return <div>\n        <img src={props.profile.photos.large} alt=\"\"/>\n        <div><b>{props.profile.fullName}</b></div>\n        <div>Статус: {props.status}</div>\n        <div>Обо мне: \"{props.profile.aboutMe}\"</div><br/>\n        Мои контакты: <br/>\n        <div>{props.profile.contacts.facebook}</div>\n        <div>{props.profile.contacts.github}</div>\n        <div>{props.profile.contacts.instagram}</div>\n        <div>{props.profile.contacts.vk}</div>\n\n    </div>;\n});\n\n\n*/\n\n/*\nабо\n\nclass Profile extends PureComponent {\n\n    render() {\n        return <div>\n            <img src={this.props.profile.photos.large} alt=\"\"/>\n            <div><b>{this.props.profile.fullName}</b></div>\n            <div>Статус: {this.props.status}</div>\n            <div>Обо мне: \"{this.props.profile.aboutMe}\"</div><br/>\n            Мои контакты: <br/>\n            <div>{this.props.profile.contacts.facebook}</div>\n            <div>{this.props.profile.contacts.github}</div>\n            <div>{this.props.profile.contacts.instagram}</div>\n            <div>{this.props.profile.contacts.vk}</div>\n\n        </div>;\n    }\n}\n\n*/\n\n\n/*\n\nабо\n\n\nclass Profile extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps != this.props || nextState != this.state;\n    }\n\n    render() {\n        return <div>\n            <img src={this.props.profile.photos.large} alt=\"\"/>\n            <div><b>{this.props.profile.fullName}</b></div>\n            <div>Статус: {this.props.status}</div>\n            <div>Обо мне: \"{this.props.profile.aboutMe}\"</div><br/>\n            Мои контакты: <br/>\n            <div>{this.props.profile.contacts.facebook}</div>\n            <div>{this.props.profile.contacts.github}</div>\n            <div>{this.props.profile.contacts.instagram}</div>\n            <div>{this.props.profile.contacts.vk}</div>\n\n        </div>;\n    }\n}\n\n* */\n\n\n\nexport default Profile\n","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus} from \"../../redux/profile_reducer\";\nimport Preloader from \"../Preloader/Preloader\";\nimport {withRouter} from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst ProfileContainer = (props) => {\n\n    useEffect(() => {\n        console.log('PC test');\n        let {getStatus, getProfile, userID, history, match} = props;\n        //this.props.setFetchingStatus(true);\n        let userID2 = match.params.userID;\n        if (!userID2 && userID) userID2 = userID; // if no ID was passed script will show 'me'\n        if (userID2) {\n            getStatus(userID2);\n            getProfile(userID2);\n            console.log('PC test2 - ' + userID2);\n\n        } else {\n            history.push('/login')\n        }\n\n    },[props.userID]);\n\n\n\n\n    if (!props.profile)\n        return <Preloader/>\n\n    return <Profile {...props}/>\n\n}\n    /*\n\n    class ProfileContainer2 extends React.Component {\n\n        componentDidMount() {\n\n            let {getStatus, getProfile, userID, history, match} = this.props;\n            //this.props.setFetchingStatus(true);\n            let userID2 = match.params.userID;\n            if (!userID2 && userID) userID2 = userID\n            if (userID2) {\n                getStatus(userID2);\n                getProfile(userID2);\n            } else {\n                history.push('/login')\n            }\n\n        }\n\n        componentDidUpdate(prevProps, prevState, snapshot) {\n\n            let {match, userID1, getStatus, getProfile, history} = this.props;\n            let p = match.url;\n            let pp = prevProps.match.url;\n            let s = this.state;\n\n            if (p !== pp) {\n                let userID = match.params.userID;\n                if (!userID && userID1) userID = userID1\n                if (userID) {\n                    getStatus(userID);\n                    getProfile(userID);\n                } else {\n                    history.push('/login')\n                }\n\n            }\n\n        }\n\n        render() {\n            // debugger\n            if (!this.props.profile)\n                return <Preloader/>\n\n            return <Profile {...this.props}/>;\n        }\n    }\n    */\n\nlet mapStateToProps = ({auth, profilePage}) => { // бере увесь глобальний STATE і повертає тільки те, що нам потрібно для цієї компоненти\n    return {\n        userID: auth.userID,\n        profile: profilePage.profile,\n        status: profilePage.status\n    }\n}\n\n//let ProfileContainerWithUrlData = (ProfileContainer);\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {\n        getProfile,\n        getStatus\n    }),\n    withAuthRedirect\n)(ProfileContainer)\n\n"],"sourceRoot":""}