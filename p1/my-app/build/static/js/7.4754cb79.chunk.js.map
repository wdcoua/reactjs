{"version":3,"sources":["utils/validate/validator.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","images/user.png","components/Login/Login.module.css","components/Profile/ProfilePhoto.jsx","components/Profile/ProfileStatusWithHocs.jsx","components/Profile/MyProfile.jsx"],"names":["required","value","length","maxLenCreator","maxLen","minLenCreator","minLen","FormControl","input","meta","touched","error","elType","props","hasError","className","styles","formControls","React","createElement","Textarea","Input","Hidden","type","createMyField","placeholder","component","name","validators","text","validate","module","exports","PhotoUpload","onChange","e","console","log","target","files","updateProfilePhoto","connect","src","photo","alt","status","setStatus","useState","editMode","setEditMode","tempStatus","setTempStatus","useEffect","toggleEditMode","currentTarget","autoFocus","onBlur","onDoubleClick","compose","state","profile","profilePage","getProfile","getStatus","updateProfile","ProfilePhoto","photos","large","defaultUserPhoto","fullName","aboutMe","contacts","facebook","github","instagram","vk","Preloader"],"mappings":"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","file":"static/js/7.4754cb79.chunk.js","sourcesContent":["export const required = value => {\n    if(value && value.length > 0) {\n        //console.log(value.length)\n        return undefined;\n    }\n    return 'required field';\n}\n\n\n\nexport const maxLenCreator = (maxLen) => (value) => {\n    if(value.length <= maxLen) return undefined;\n    return `max length ${maxLen} symbols`;\n}\n\nexport const minLenCreator = (minLen) => value => {\n    if(value.length >= minLen) return undefined;\n    return `min length ${minLen} symbols`;\n}\n\nexport const onlyNumbers = () => value => {\n    if(value.match(/[0-9]/)) return undefined;\n    return `i accept only numbers `;\n}\n\n","import React from 'react';\nimport styles from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\nimport {required} from \"../../../utils/validate/validator\";\n\nconst FormControl = ({input, meta: {touched,error}, elType, ...props}) => {\n    let hasError = touched && error;\n\n    return (\n        <div className={styles.formControls + \" \" + (hasError && styles.error)}>\n\n            <div>\n                {React.createElement(elType, {/*type:'file', */...input, ...props})}\n            </div>\n            {hasError && <span> {error}</span>}\n        </div>\n    )\n}\n\n\n\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='textarea'/>\n}\n/*\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/>\n    </FormControl>\n}*/\n/*\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}*/\n\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input'/>\n}\nexport const Hidden = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='hidden' />\n}\nexport const FileUpload = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='file'/>\n}\n\n\nexport const createMyField = (placeholder,component,name,validators, props = {}, text = '') =>\n    (\n        <div>\n            <Field\n                placeholder={placeholder}\n                component={component}\n                name={name}\n                validate={validators}\n                {...props}\n            /> {text}\n        </div>\n    )\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormsControls_formControls__MCv0m\",\"error\":\"FormsControls_error__9lcue\"};","module.exports = __webpack_public_path__ + \"static/media/user.d961d73a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"captchaDiv\":\"Login_captchaDiv__36ONs\",\"noCaptcha\":\"Login_noCaptcha__nLUEK\",\"error\":\"Login_error__17Wu6\",\"noError\":\"Login_noError__3IZw_\"};","import React, {useState,useEffect} from \"react\"\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport style from \"../Login/Login.module.css\";\nimport {FileUpload, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validate/validator\";\nimport {compose} from \"redux\";\nimport {checkAuthorization, login} from \"../../redux/auth_reducer\";\nimport {updateProfilePhoto} from \"../../redux/profile_reducer\";\n\n/*\nconst PhotoUpload = (props) => {\n    const onSubmit = (formData) => {\n        //\n        /!*if(props.auth.isAuth === false){\n            props.login(formData.email,formData.pass,formData.rememberMe,formData.captcha)\n        }else{\n            return <Redirect to={'/index'}/>\n        }*!/\n        console.log(formData)\n    }\n    return <div>\n        <PhotoUploadReduxForm onSubmit={onSubmit} {...props} />\n    </div>\n}*/\n\nconst PhotoUpload = (props) => {\n\n    // if(props.auth.isAuth === false){\n    //props.auth(formData.email,formData.pass,formData.rememberMe)\n\n    const onPhotoSelected = (e) =>{\n        console.log(e.target.files[0])\n        if(e.target.files.length)\n            props.updateProfilePhoto(e.target.files[0])\n    }\n\n    return <input onChange={onPhotoSelected}\n                   type={'file'} />;\n\n    /*\n}else{\n    return <Redirect to={'/index'}/>\n}*/\n\n\n}\n//\n// const PhotoUploadReduxForm = reduxForm({\n//     form: 'photoUpload'\n// })(PhotoUploadForm)\n\n\n\n\nlet ProfilePhoto = (props) => {\n\n    return <div>\n        <img src={props.photo} alt=\"\"/>\n        <PhotoUpload updateProfilePhoto={props.updateProfilePhoto}/>\n    </div>\n}\n\n\n\nexport default connect(null,{updateProfilePhoto})(ProfilePhoto)\n\n// export default connect()(ProfilePhoto)","import React, {useState,useEffect} from \"react\"\nimport {connect} from \"react-redux\";\n// import {setStatus} from \"../../redux/profile_reducer\";\n\nconst ProfileStatusWithHocs = ({status,setStatus}) => { // props\n\n    /*\n    * хуки НЕ можна використовувати в умовах і циклах\n    * */\n\n    let [editMode,setEditMode] = useState(false); // hook\n    let [tempStatus,setTempStatus] = useState(status); // hook\n\n    useEffect( () => { // хук, функція, яка виконується ПІСЛЯ того як відбулось відображення рендерингу\n        setStatus(status) // що зробити\n    },[status]); // при якій умові - коли змінюється вказаний елемент // якщо умова - порожній масив - [] - то поведінка буде як у componentDidMount\n\n    const toggleEditMode = () => {\n        if( editMode === false)\n            setEditMode(true);\n        else{\n            setEditMode(false);\n            setStatus(tempStatus);\n        }\n    }\n\n    const statusOnChange = (e) => {\n        setTempStatus( e.currentTarget.value )\n    }\n\n    return <div>\n        {editMode\n            ? <div>\n                <input value={tempStatus}  onChange={statusOnChange} autoFocus={true} onBlur={toggleEditMode} />\n\n            </div>\n            : <div>\n                <span onDoubleClick={toggleEditMode}>{tempStatus === '' ? '[click to change]' : tempStatus}</span>\n            </div>\n        }\n    </div>\n}\n\nexport default connect()(ProfileStatusWithHocs)","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {getProfile, getStatus, setStatus, updateProfile} from \"../../redux/profile_reducer\";\nimport ProfileStatusWithHocs from \"./ProfileStatusWithHocs\";\nimport ProfilePhoto from \"./ProfilePhoto\";\nimport defaultUserPhoto from \"../../images/user.png\";\nimport Preloader from \"../Preloader/Preloader\";\n\nconst MyProfile = ({profile,getProfile,getStatus,status,setStatus}) => {\n    // let {profile,getProfile,getStatus,status,setStatus} = props;\n\n    useEffect(() => {\n\n        // let {getProfile,getStatus} = props;\n        getProfile(11583);\n        getStatus(11583);\n    },[status])\n\n\n/*\n    if(profile === null) {\n        getProfile(11583);\n        getStatus(11583);\n        //this.props.updateProfile();\n        return null;\n\n    }*/\n\n    if (!profile || !status)\n        return <Preloader/>\n\n    return <div>\n        <ProfilePhoto\n            photo={profile.photos.large ? profile.photos.large : defaultUserPhoto }\n        />\n\n\n        <div><b>{profile.fullName}</b></div>\n        <ProfileStatusWithHocs\n            status={status}\n            setStatus={setStatus}\n        />\n\n        <div>\"{profile.aboutMe}\"</div><br/>\n        Мои контакты: <br/>\n        <div>{profile.contacts.facebook}</div>\n        <div>{profile.contacts.github}</div>\n        <div>{profile.contacts.instagram}</div>\n        <div>{profile.contacts.vk}</div>\n\n    </div>;\n}\n/*\n\nclass MyProfile2 extends React.Component{\n\n    componentDidMount() {\n\n        let {getProfile,getStatus} = this.props;\n        getProfile(11583);\n        getStatus(11583);\n        // this.props.setFetchingStatus(true);\n        //let userID = this.props.match.params.userID;\n        // this.props.getProfile(11583);\n        // this.props.getStatus(11583);\n    }\n\n    render(){\n        //debugger\n\n        let {profile,getProfile,getStatus,status,setStatus} = this.props;\n\n        if(profile === null) {\n            getProfile(11583);\n            getStatus(11583);\n            //this.props.updateProfile();\n            return null;\n\n        }\n        return <div>\n            <ProfilePhoto\n                 photo={profile.photos.large ? profile.photos.large : defaultUserPhoto }\n            />\n\n\n            <div><b>{profile.fullName}</b></div>\n            <ProfileStatusWithHocs\n                status={status}\n                setStatus={setStatus}\n            />\n\n            <div>\"{profile.aboutMe}\"</div><br/>\n            Мои контакты: <br/>\n            <div>{profile.contacts.facebook}</div>\n            <div>{profile.contacts.github}</div>\n            <div>{profile.contacts.instagram}</div>\n            <div>{profile.contacts.vk}</div>\n\n        </div>;\n    }\n}\n*/\n\nlet mapStateToProps = (state) => { // бере увесь глобальний STATE і повертає тільки те, що нам потрібно для цієї компоненти\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status\n    }\n}\n\nexport default compose(\n    connect(\n        mapStateToProps,{\n            getProfile,\n            getStatus,\n            setStatus,\n            updateProfile\n        }\n    )\n)(MyProfile)\n\n"],"sourceRoot":""}