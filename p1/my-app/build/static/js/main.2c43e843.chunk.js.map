{"version":3,"sources":["redux/auth_reducer.js","components/hoc/withSuspenseWrapper.jsx","serviceWorker.js","redux/redux-store.js","components/Nav/Menu/Menu.jsx","components/Nav/Nav.jsx","components/Examples/Example/Examples.jsx","components/Examples/ExamplesContainer.jsx","components/Main/Main.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js","utils/object-helpers.js","redux/users_reducer.js","redux/profile_reducer.js","redux/examples_reducer.js","images/kotigoroshko.jpg","redux/app_reducer.js","components/Preloader/Preloader.jsx","redux/gb_reducer.js","components/Header/Header.module.css","images/zloy_admin.png","components/Nav/Menu/Menu.module.css","api/api.js","redux/chat_reducer.js","components/Main/Main.module.css","components/Examples/Example/Example.module.css","images/rings.svg","components/Footer/Footer.module.css","images/logout.png"],"names":["SET_USER_DATA","SET_USER_IMG","SET_CAPTCHA_IMG","SET_CAPTCHA_ANS","initialState","userID","email","login","userImg","isAuth","capthaImg","captchaAnswer","loginError","auth_reducer","state","action","type","payload","img","ans","setUserAuthData","setUserAuthImg","setCaptchaAnswer","c","dispatch","a","checkAuthorization","API","authMe","data","resultCode","id","getProfile","promise1","getStatus","promise2","Promise","all","then","setUserProfile","setUserStatus","logOut","pass","remember","getState","captcha","auth","stopSubmit","_error","messages","join","getCaptcha","url","withSuspenseWrapper","Component","props","fallback","Boolean","window","location","hostname","match","reducers","combineReducers","gb","gb_reducer","chat","chat_reducer","examples","examples_reducer","users","users_reducer","profilePage","profile_reducer","form","formReducer","app","app_reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Menu","href","text","className","menu","to","activeClassName","active","Nav","Examples","map","e","key","example","link","title","descr","connect","getExamples","useEffect","examplesList","ChatContainer","lazy","GuestBookContainer","Login","MyProfile","ProfileContainer","UsersContainer","Main","main","path","render","Footer","copy","Header","src","logo","alt","logout","onClick","AppContainer","withRouter","initialized","initial","pageWithMe","myId","total","totalUsers","usersPerPage","currentPage","userid","initializeApp","getUsers","setPageWithMe","currentPage2","Math","ceil","Preloader","SamuraiJsApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","updateObjectInArray","items","itemId","objPropName","newObjProps","u","SET_USERS","SET_INITIAL","SET_PAGE_WITH_ME","SET_TOTAL_USERS","SET_CURRENT_PAGE","CHANGE_FETCHING_STATUS","FOLLOWING_IN_PROGRESS","usersList","isFetching","followingIsInProgress","fake","changeUserFollowStatus","user_id","followed","followStatus","userId","filter","setUsers","setTotalUsers","setCurrentPage","setFetchingStatus","setFollowingInProgress","totalCount","follow","followToggle","log","unfollow","resp","SET_USER_PROFILE","SET_USER_STATUS","UPD_USER_PHOTOS","SET_PROFILE_UPDATED","profile","status","profileUpdatedToggle","photos","setProfileUpdated","updateProfilePhoto","photoFile","out","setStatus","updateProfile","profileObj","deCapitalizeFirstLetter","string","charAt","toLowerCase","slice","errObj","erObj","er","found","length","found2","name","parseErrors","SET_EXAMPLES","DEL_EXAMPLE","ADD_EXAMPLE","ex","module","exports","SET_INITIALIZED","promise","getGbPosts","promise3","promise4","preloader","style","width","NEW_GB_POST_CHANGE","ADD_GB_POST","SET_GB_POSTS","DEL_GB_POST","gbPosts","newPostText","d","Date","time","parseInt","getTime","newPost","answer","answer_time","ip","ua","changedText","posts","post","post_id","addGBPost","newGBpostChange","instance","axios","withCredentials","baseURL","headers","instance2","get","delete","put","photo","formData","FormData","append","password","rememberMe","ADD_CHAT_POST","DEL_CHAT_POST","NEW_CHAT_POST_CHANGE","chatPosts","author","authorAva","kot","date","za","newChatPostText","newChatPost","ch","addChatPost","newChatPostChange"],"mappings":"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","file":"static/js/main.2c43e843.chunk.js","sourcesContent":["import {API} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getStatus, setUserProfile, setUserStatus} from \"./profile_reducer\";\nimport {setInitialized} from \"./app_reducer\";\n\nconst SET_USER_DATA = 'samurai_project/auth/SET_USER_DATA';\nconst SET_USER_IMG = 'samurai_project/auth/SET_USER_IMG';\nconst SET_CAPTCHA_IMG = 'samurai_project/auth/SET_CAPTCHA_IMG';\nconst SET_CAPTCHA_ANS = 'samurai_project/auth/SET_CAPTCHA_ANS';\nconst UPD_USER_PHOTOS = 'samurai_project/auth/UPD_USER_PHOTOS';\n//const SET_ERROR = 'SET_ERROR';\n\nlet initialState = {\n    userID: null,\n    email: null,\n    login: null,\n    userImg: null,\n    isAuth: false,\n    capthaImg: null,\n    captchaAnswer: null,\n    loginError: null\n}\n\nconst auth_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        /*case LOG_OUT:\n            return {\n                ...state,\n                isAuth: false\n            }*/\n\n        case SET_USER_IMG:\n            return {\n                ...state,\n                userImg: action.img\n            }\n\n        case SET_CAPTCHA_IMG:\n            return {\n                ...state,\n                capthaImg: action.img\n            }\n        case SET_CAPTCHA_ANS:\n            return {\n                ...state,\n                captchaAnswer: action.ans\n            }\n        /*        case SET_ERROR:\n                    return {\n                        ...state,\n                        loginError:action.err\n                    }*/\n\n\n        default:\n            return state;\n\n    }\n\n}\n\nexport default auth_reducer;\n\nexport const setUserAuthData = (userID, email, login, isAuth, capthaImg, captchaAnswer, loginError) => {\n    return {type: SET_USER_DATA, payload: {userID, email, login, isAuth, capthaImg, captchaAnswer, loginError}};\n}\n\n/*export const setUserLogOut = () => {\n    return {type: LOG_OUT};\n}*/\n\nexport const setUserAuthImg = (img) => { /* not used */\n    return {type: SET_USER_IMG, img};\n}\nexport const setUserAuthCaptchaImg = (img) => {\n    return {type: SET_CAPTCHA_IMG, img};\n}\nexport const setUserAuthCaptchaAnswer = (ans) => {\n    return {type: SET_CAPTCHA_ANS, ans};\n}\n/*export const setUserAuthError = (err) => {\n    return {type: SET_ERROR, err};\n}*/\n\n// thunk-и\n\nexport const setCaptchaAnswer = (c) => async (dispatch) => {\n    // console.log('dsd')\n    // console.log(c)\n    dispatch(setUserAuthCaptchaAnswer(c));\n}\n\nexport const checkAuthorization = () => async (dispatch) => {\n\n    let data = await API.authMe();\n    if (data.resultCode === 0) {\n        let {id, login, email} = data.data;\n        dispatch(setUserAuthData(id, email, login, true, null, null, null));\n        // let resp2 = await API.getProfile(id);\n        // dispatch(setUserProfile(resp2.data));\n        // let data2 = await API.getStatus(id);\n        // dispatch(setUserStatus(data2));\n\n        let promise1 = await API.getProfile(id);\n        let promise2 = await API.getStatus(id);\n        let data3 = await Promise.all([promise1,promise2])\n            .then( () => {\n\n                dispatch(setUserProfile(promise1.data));\n                dispatch(setUserStatus(promise2));\n                // dispatch(setInitialized())\n            })\n\n\n    }\n}\n\n\nexport const logOut = () => async (dispatch) => {\n    await API.logOut()\n    // console.warn('logout2');\n    //dispatch(setUserLogOut());\n    dispatch(setUserAuthData(null, null, null, false, null, null, null));\n\n}\n\n\nexport const login = (email, pass, remember) => async (dispatch,getState) => {\n    let captcha = getState().auth.captchaAnswer;\n    let data = await API.auth(email, pass, remember, captcha);\n    // console.log(data)\n    if (data.resultCode === 0) {\n        // console.log('login +')\n        dispatch(checkAuthorization());\n\n    } else {\n        //dispatch(setUserAuthError(data.messages.join('<br/>')));\n\n        dispatch(stopSubmit('auth', {_error: data.messages.join('<br/>')}));\n\n        if (data.resultCode === 10) {\n            let data = await API.getCaptcha();\n                    dispatch(setUserAuthCaptchaImg(data.url));\n            // todo зробити виведення помилок - а треба?\n        }\n    }\n\n\n}","import React,{Suspense} from \"react\";\n// import {connect} from \"react-redux\";\nimport Preloader from \"../Preloader/Preloader\";\n\nexport const withSuspenseWrapper = (Component) => {\n    /*const SuspenseWrapper = (props) => {\n        return  <Suspense fallback={<Preloader/>}>\n            <Component {...props} />\n        </Suspense>;\n    }\n    return connect()(SuspenseWrapper)\n*/\n\n\n    return (props) => {\n        return <Suspense fallback={<Preloader/>}>\n            <Component {...props} />\n        </Suspense>;\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore,compose} from \"redux\";\nimport gb_reducer from \"./gb_reducer\";\nimport chat_reducer from \"./chat_reducer\";\nimport examples_reducer from \"./examples_reducer\";\nimport users_reducer from \"./users_reducer\";\nimport profile_reducer from \"./profile_reducer\";\nimport auth_reducer from \"./auth_reducer\";\nimport thunkMiddleware from \"redux-thunk\"\n//import { composeWithDevTools } from 'redux-devtools-extension';\nimport {reducer as formReducer} from \"redux-form\";\nimport app_reducer from \"./app_reducer\";\n\nlet reducers = combineReducers({\n    gb: gb_reducer,\n    chat: chat_reducer,\n    examples: examples_reducer,\n    users: users_reducer,\n    profilePage: profile_reducer,\n    auth: auth_reducer,\n    form: formReducer,\n    app: app_reducer\n})\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n));\n\n\n\n// let store = createStore(reducers,applyMiddleware(thunkMiddleware));\n//let store = createStore(reducers,composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nwindow.__store__ = store;\n\nexport default store;","import React from 'react';\nimport c from './Menu.module.css'\nimport { NavLink} from \"react-router-dom\";\n\nconst Menu = ({href,text}) => {\n\n    return (\n\n            <div className={c.menu}><NavLink to={href} activeClassName={c.active}>{text}</NavLink></div>\n    );\n\n    /*\n        return (<nav>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Відгуки</a></div>\n          <div className=\"menu\"><a href=\"#\">Замовити скрипт</a></div>\n          <div className=\"menu\"><a href=\"#\">Контакти</a></div>\n          <div className=\"menu\"><a href=\"#\">Фідбек</a></div>\n          <div className=\"menu\"><a href=\"#\">Оплата</a></div>\n          <div className=\"menu\"><a href=\"#\">Чат</a></div>\n          <div className=\"menu\"><a href=\"#\">FreeWare</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n        </nav>\n        );\n    */\n\n}\n\nexport default Menu;","import React from 'react';\nimport Menu from './Menu/Menu';\n\nconst Nav = () => {\n    return (\n\n            <nav>\n                <Menu text=\"Main\" href=\"/index\"/>\n                <Menu text=\"Examples\" href=\"/examples\"/>\n                <Menu text=\"Guest Book\" href=\"/gb\"/>\n                <Menu text=\"Chat\" href=\"/chat\"/>\n                <Menu text=\"Users\" href=\"/users\"/>\n                <Menu text=\"Profile\" href=\"/profile\"/>\n                <Menu text=\"...\" href=\"/out/14\"/>\n            </nav>\n    );\n\n    /*\n        return (<nav>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Відгуки</a></div>\n          <div className=\"menu\"><a href=\"#\">Замовити скрипт</a></div>\n          <div className=\"menu\"><a href=\"#\">Контакти</a></div>\n          <div className=\"menu\"><a href=\"#\">Фідбек</a></div>\n          <div className=\"menu\"><a href=\"#\">Оплата</a></div>\n          <div className=\"menu\"><a href=\"#\">Чат</a></div>\n          <div className=\"menu\"><a href=\"#\">FreeWare</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n        </nav>);\n    */\n\n}\n\nexport default Nav;","import React from 'react';\nimport c from './Example.module.css';\n\nconst Examples = (props) => {\n  return (\n\n      <div>\n          <h1>Приклади моїх робіт</h1>\n\n          {props.examples.map(e =>\n              <div key={e.id} className={c.example}>\n                  <a href={e.link} title={e.descr}>{e.title}</a>\n              </div>\n\n          // <Example\n          //     key={e.id}\n          //     id={e.id}\n          //     link={ e.link}\n          //     title={e.title}\n          //     descr={e.descr}\n          //     date={e.date}\n          // />\n\n          )}\n      </div>\n\n\n  );\n}\n\nexport default Examples;\n\n","import {connect} from \"react-redux\";\nimport {getExamples} from \"../../redux/examples_reducer\";\nimport React, {useEffect} from \"react\"\nimport Examples from \"./Example/Examples\";\n// import {useEffect} from \"react/cjs/react.production.min\";\n\nconst ExamplesContainer = ({getExamples,examples}) => {\n    useEffect( () => {\n        getExamples();\n    }); // якщо написати [examples], то скрипт буде бомбити сервер запитами \"чи не змінились екзампли\"\n\n    return <Examples examples={examples.examplesList}/>;\n}\n/*\n\nclass ExamplesContainer extends React.Component{\n\n    componentDidMount = () => {\n        this.props.getExamples();\n    }\n\n    render(){\n        return (\n            <Examples examples={this.props.examples.examplesList}/>\n        );\n    }\n}\n*/\n\nlet mapStateToProps = (state) => {\n    // console.warn(state);\n    return {\n        examples: state.examples,\n    }\n}\n\n\nexport default connect(mapStateToProps, {getExamples})(ExamplesContainer)\n","import React, {lazy} from 'react';\nimport c from './Main.module.css';\nimport { Route} from \"react-router-dom\";\n// import ChatContainer from \"../Chat/ChatContainer\";\n// import GuestBookContainer from \"../GuestBook/GuestBookContainer\";\nimport ExamplesContainer from \"../Examples/ExamplesContainer\";\n// import Users from \"../Users/Users\";\n// import UsersContainer from \"../Users/UsersContainer\";\n// import ProfileContainer from \"../Profile/ProfileContainer\";\n// import Login from \"../Login/Login\";\n// import MyProfile from \"../Profile/MyProfile\";\nimport {withSuspenseWrapper} from \"../hoc/withSuspenseWrapper\";\n\n// ленивая загрузка компонентов\nconst ChatContainer = lazy(() => import ('../Chat/ChatContainer'));\nconst GuestBookContainer = lazy(() => import ('../GuestBook/GuestBookContainer'));\nconst Login = lazy(() => import ('../Login/Login'));\nconst MyProfile = lazy(() => import ('../Profile/MyProfile'));\nconst ProfileContainer = lazy(() => import ('../Profile/ProfileContainer'));\nconst UsersContainer = lazy(() => import ('../Users/UsersContainer'));\n\nconst Main = () => {\n    return (\n            <div className={c.main}>\n\n                <Route path='/examples' render={() => (\n                            <ExamplesContainer/>\n                )}/>\n                <Route path='/index' render={() => (\n                            <ExamplesContainer/>\n                )}/>\n                <Route  path='/gb' render={withSuspenseWrapper(GuestBookContainer)}/>\n                <Route  path='/chat' render={withSuspenseWrapper(ChatContainer)}/>\n                <Route  path='/users' render={withSuspenseWrapper(UsersContainer)}/>\n                <Route  path='/profile/:userID?' render={withSuspenseWrapper(ProfileContainer)}/>\n                <Route  path='/myprofile' render={withSuspenseWrapper(MyProfile)}/>\n                <Route  path='/login' render={withSuspenseWrapper(Login)}/>\n                <Route  path='/reg' render={withSuspenseWrapper(Login)}/>\n\n\n            </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport c from './Footer.module.css';\n\nconst Footer = () => {\n  return (\n    <footer><div className={c.copy}>&copy; wd<br />- 2020 -</div></footer>\n  );\n}\n\nexport default Footer; ","import React from 'react';\nimport c from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport logout from \"../../images/logout.png\"\n\n\n\nconst Header = ({logOut,auth}) => {\n\n    return <header>\n        <img src=\"https://wd.co.ua/pic/wd_logo_sh_transparent.png\" className={c.logo} alt='alt'/>\n\n        <div className={c.auth}>\n\n            {auth.isAuth\n                ? <div>\n                    <NavLink to={'/myprofile'}>\n                        {auth.login}\n                    </NavLink>\n                    <img src={logout} alt='logout' title='вийти' className={c.logout} onClick={logOut}/>\n                    {/*<LogOutFormRedux {...props} onSubmit={onSubmit} />*/}\n                </div>\n\n                : <div>\n                <NavLink to={'/reg'}>\n                    <button id=\"reg\">Реєстрація</button>\n                </NavLink> <NavLink to={'/login'}>\n                <button id=\"enter\">Вхід</button>\n            </NavLink>\n            </div>}\n\n        </div>\n    </header>\n}\n\nexport default Header;","import React from 'react';\nimport Header from \"./Header\";\nimport {checkAuthorization, logOut, setUserAuthData, setUserAuthImg} from \"../../redux/auth_reducer\";\nimport {connect} from \"react-redux\";\n\nconst HeaderContainer = (props) => {\n    return <Header {...props} />\n}\n/*\nclass HeaderContainer2 extends React.Component{\n    render(){\n        return <Header {...this.props} />\n    }\n}*/\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        auth: auth\n    }\n};\n\nexport default connect(mapStateToProps,{setUserAuthData,setUserAuthImg,checkAuthorization, logOut})(HeaderContainer);","import React, {useEffect} from \"react\";\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {BrowserRouter, HashRouter, withRouter} from \"react-router-dom\";\nimport {initializeApp} from \"./redux/app_reducer\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {getUsers, setPageWithMe} from \"./redux/users_reducer\";\n\n\n\nconst App = ({initializeApp,initialized,total,usersPerPage,getUsers,setPageWithMe,userid}) => {\n    useEffect(() => {\n\n        // console.log('total - ' + total);\n        // console.log('initialized - ' + initialized);\n        if(total !== 0){\n\n            // 76\n            // 6590\n            let currentPage2 = 1;\n\n            if(userid === 11583) // wd\n                currentPage2 = Math.ceil((total - 6590) / usersPerPage);\n            else if(userid === 1079) // test\n                currentPage2 = Math.ceil((total - 76) / usersPerPage);\n\n            // console.log('userid - ' + userid);\n            // console.log('currentPage2 - ' + currentPage2);\n\n            getUsers(usersPerPage,currentPage2);\n        }else{\n            initializeApp();\n        }\n\n    },[total]);\n\n    return !initialized\n        ? <Preloader />\n        : <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <Nav/>\n            <Main/>\n            <Footer/>\n\n        </div>\n}\n/*\n\nclass App extends React.Component {\n\n    componentDidMount() {\n\n        this.props.initializeApp();\n\n    }\n\n    render() {\n\n        return !this.props.initialized\n            ? <Preloader />\n            : <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Nav/>\n                <Main/>\n                <Footer/>\n\n            </div>\n    }\n}\n*/\n\nconst mapStateToProps = (store) => {\n    // debugger\n    return {\n        initialized: store.app.initialized,\n        initial: store.users.initial,\n        pageWithMe: store.users.pageWithMe,\n        myId: store.users.myId,\n        total: store.users.totalUsers,\n        usersPerPage: store.users.usersPerPage,\n        currentPage: store.users.currentPage,\n        userid: store.auth.userID,\n    }\n};\n\n\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps,{initializeApp,getUsers,setPageWithMe}))(App);\n\n\nconst SamuraiJsApp = () => {\n\n\n\n    // return <BrowserRouter>\n    //     <Provider store={store}>\n    //         <AppContainer />\n    //     </Provider>\n    // </BrowserRouter>\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\n\n\nexport default SamuraiJsApp\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider}  from \"react-redux\";\nimport SamuraiJsApp from \"./App\";\n\n/*\nsetInterval(() => {\n    store.dispatch({type:\"FAKE\"})\n}, 1000)\n*/\n\n    ReactDOM.render(\n        <SamuraiJsApp />, document.getElementById('root')\n    );\n\n\n\nserviceWorker.unregister();\n","\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map( u => {\n        if(u[objPropName] === itemId){\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}","import {API} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst CHANGE_USER_FOLLOW_STATUS = 'samurai_project/users/CHANGE_USER_FOLLOW_STATUS';\nconst SET_USERS = 'samurai_project/users/SET_USERS';\nconst SET_INITIAL = 'samurai_project/users/SET_INITIAL';\nconst SET_PAGE_WITH_ME = 'samurai_project/users/SET_PAGE_WITH_ME';\nconst SET_TOTAL_USERS = 'samurai_project/users/SET_TOTAL_USERS';\nconst SET_CURRENT_PAGE = 'samurai_project/users/SET_CURRENT_PAGE';\nconst CHANGE_FETCHING_STATUS = 'samurai_project/users/CHANGE_FETCHING_STATUS';\nconst FOLLOWING_IN_PROGRESS = 'samurai_project/users/FOLLOWING_IN_PROGRESS';\n\nlet initialState = {\n    usersList: [],\n    usersPerPage: 20,\n    totalUsers: 0,\n    currentPage: 30,\n    isFetching: true,\n    followingIsInProgress: [],\n    fake: 0,\n    initial: 1,\n    pageWithMe: 0,\n    myId: 11583\n}\n\nconst users_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case \"FAKE\" :\n            return {...state, fake: state.fake + 1}\n        case CHANGE_USER_FOLLOW_STATUS:\n            return {\n                ...state,\n                usersList: updateObjectInArray(state.usersList,action.user_id, 'id', {followed: (action.followStatus === 1)} )\n                /*\n                usersList: state.usersList.map(u => { // перебір масиву користувачів\n                        if (u.id === action.user_id) {    // пошук по ID\n                            if (action.followStatus === 1) {\n                                //console.log(u.id + ' - ' + action.user_id)\n                                return {\n                                    ...u,   // копіюємо самого користувача\n                                    followed: true  // змінюємо статус follow\n                                }\n                                // console.log(newU);\n                            }\n                            if (action.followStatus === 0) {\n                                //console.log(u.id + ' - ' + action.user_id)\n                                return {\n                                    ...u,\n                                    followed: false\n                                }\n                                // console.log(newU);\n                            }\n                        }\n                        return u;\n                    }\n                )\n*/\n\n            }\n\n        // console.log(stateCopy)\n        // return stateCopy\n        case SET_USERS:\n            return {\n                ...state,\n                usersList: [...action.users]\n            }\n        case SET_PAGE_WITH_ME:\n            return {\n                ...state,\n                pageWithMe: action.pageWithMe\n            }\n        case SET_INITIAL:\n            return {\n                ...state,\n                initial: action.initial\n            }\n        case SET_TOTAL_USERS:\n            // debugger\n            return {\n                ...state,\n                totalUsers: action.total\n            }\n        case SET_CURRENT_PAGE:\n            // debugger\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case CHANGE_FETCHING_STATUS:\n            // debugger\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case FOLLOWING_IN_PROGRESS:\n            // debugger\n            return {\n                ...state,\n                followingIsInProgress: action.followingIsInProgress\n                    ? [...state.followingIsInProgress, action.userId]\n                    : state.followingIsInProgress.filter(id => id !== action.userId)\n            }\n\n        default:\n            return state;\n        //break;\n\n    }\n\n}\n\nexport default users_reducer;\n\n\nexport const changeUserFollowStatus = (user_id, followStatus) => {\n    return {type: CHANGE_USER_FOLLOW_STATUS, user_id: user_id, followStatus: followStatus};\n}\n\n\nexport const setUsers = (users) => {\n    return {type: SET_USERS, users: users};\n}\nexport const setPageWithMe = (pageWithMe) => {\n    return {type: SET_PAGE_WITH_ME, pageWithMe: pageWithMe};\n}\nexport const setInitial = (initial) => {\n    return {type: SET_INITIAL, initial: initial};\n}\nexport const setTotalUsers = (total) => {\n    return {type: SET_TOTAL_USERS, total: total};\n}\nexport const setCurrentPage = (currentPage) => {\n    //console.log(currentPage)\n    //console.log('111')\n    return {type: SET_CURRENT_PAGE, currentPage: currentPage};\n}\nexport const setFetchingStatus = (isFetching) => {\n    //console.log(currentPage)\n    return {type: CHANGE_FETCHING_STATUS, isFetching: isFetching};\n}\nexport const setFollowingInProgress = (followingIsInProgress, userId) => {\n    //console.log(currentPage)\n    return {type: FOLLOWING_IN_PROGRESS, followingIsInProgress, userId};\n}\n\n\n// thunk-и\n// export const getUsers = (usersPerPage = 20, currentPage = 229) => async (dispatch) => {\nexport const getUsers = (usersPerPage = 20, currentPage  = 0) => async (dispatch) => {\n\n    // console.log('curpage__reducer = ' + currentPage)\n    dispatch(setFetchingStatus(true));\n\n    if(currentPage === 0){\n        currentPage = 1;\n    }else{\n        dispatch(setCurrentPage(currentPage));\n    }\n    /*\n    if(initial === 1){\n        // first request to get to know total and calculate current page with ME\n        dispatch(setInitial(2));\n    }else if(initial === 2){\n        // second request to get current page with ME\n        dispatch(setInitial(0));\n    }else{\n        // all other requests - if page is set - get that page, else get page with ME\n        // every time calculate page with ME\n    }\n    */\n\n    //this.props.setFetchingStatus(true);\n    let data = await API.getUsers(usersPerPage, currentPage);\n    // .then(data => {\n    // debugger\n\n    // if(currentPage === 255){\n    //     data = await API.getUsers(usersPerPage, currentPage, data.totalCount);\n    // }\n\n    dispatch(setFetchingStatus(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsers(data.totalCount));\n    // console.log('cp - '+data.cp)\n\n\n\n    // dispatch(setInitial(initial));\n    // dispatch(setPageWithMe(2));\n\n\n    // this.props.totalUsers = resp.data.totalCount\n    // console.log(resp)\n    // })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}\n\nexport const follow = (id, followToggle) => async (dispatch) => {\n\n    //dispatch(setFetchingStatus(true));\n\n\n    dispatch(setFollowingInProgress(true, id));\n\n    if (followToggle) { // follow\n\n\n        let data = await API.follow(id);\n        // .then(data => {\n        // debugger\n        if (data.resultCode === 0) { // чи потрібно?\n\n            //props.setFetchingStatus(false);\n            dispatch(changeUserFollowStatus(id, 1));\n            dispatch(setFollowingInProgress(false, id));\n\n\n            //props.setUsers(resp.data.items)\n            //props.setTotalUsers(resp.data.totalCount)\n            // props.totalUsers = resp.data.totalCount\n            console.log(data)\n            //console.log('ffffff')\n        } else {\n            // error\n        }\n        // })\n        //\n        // .catch(error => {\n        //     console.warn(error);\n        // });\n    } else { // unfollow\n        let resp = await API.unfollow(id)\n        // .then(resp => {\n        // debugger\n        //props.setFetchingStatus(false);\n        dispatch(changeUserFollowStatus(id, 0));\n        dispatch(setFollowingInProgress(false, id));\n\n\n        //props.setUsers(resp.data.items)\n        //props.setTotalUsers(resp.data.totalCount)\n        // props.totalUsers = resp.data.totalCount\n        console.log(resp)\n        // })\n        //\n        // .catch(error => {\n        //     console.warn(error);\n        // });\n    }\n\n\n}\n\n\n// export const newChatPostChangeActionCreator = (text) => {\n//     return {type: NEW_CHAT_POST_CHANGE, changedText: text};\n// }\n// export const gETChatNEWPOSTTEXTActionCreator = () => {\n//     return {type: GET_CHAT_NEW_POST_TEXT};\n// }\n","import {API} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n// import {checkAuthorization, setUserAuthCaptchaImg} from \"./auth_reducer\";\n// import {getExamples} from \"./examples_reducer\";\n// import {setInitialized} from \"./app_reducer\";\n\nconst SET_USER_PROFILE = 'samurai_project/profile/SET_USER_PROFILE';\nconst SET_USER_STATUS = 'samurai_project/profile/SET_USER_STATUS';\nconst UPD_USER_PHOTOS = 'samurai_project/auth/UPD_USER_PHOTOS';\nconst SET_PROFILE_UPDATED = 'samurai_project/auth/SET_PROFILE_UPDATED';\n\nlet initialState = {\n    profile: null,\n    status: \"\",\n    profileUpdatedToggle: false\n}\n\nconst profile_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SET_USER_PROFILE:\n            //console.log('reduser ' + action.profile)\n            return {\n                ...state,\n                profile: action.profile\n            }\n        case SET_USER_STATUS:\n\n            return {\n                ...state,\n                status: action.status\n            }\n        case UPD_USER_PHOTOS:\n\n            return {\n                ...state,\n                profile: {...state.profile,\n                photos: action.photos},\n            }\n        case SET_PROFILE_UPDATED:\n\n            return {\n                ...state,\n                profileUpdatedToggle: action.status,\n            }\n\n        default:\n            return state;\n        //break;\n\n    }\n\n}\n\nexport default profile_reducer;\n\n\nexport const setUserProfile = (profile) => {\n    return {type: SET_USER_PROFILE, profile};\n}\nexport const setProfileUpdated = (status) => {\n    return {type: SET_PROFILE_UPDATED, status};\n}\nexport const setUserStatus = (status) => {\n    return {type: SET_USER_STATUS, status};\n}\n/*export const updateProfilePhoto2 = (photo) => {\n    return {type: SET_USER_STATUS, photo};\n}*/\nexport const updateProfilePhotos = (photos) => {\n    return {type: UPD_USER_PHOTOS, photos};\n}\n\n// thunk-и\n\nexport const getProfile = (id) => async (dispatch,getState) => {\n    const userId = getState().auth.userID;\n\n    //console.log('thunk - ' + id)\n    let resp = await API.getProfile(!id ? userId : id);\n    // .then(resp => {\n    //console.log('data = ' + data)\n    dispatch(setUserProfile(resp.data));\n    // })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}\n\nexport const getStatus = (id) => async (dispatch,getState) => {\n    const userId = getState().auth.userID;\n    let data = await API.getStatus(!id ? userId : id);\n    // .then(data => {\n    //const {resultCode} = data;\n    //if(resultCode === 0 || resultCode === undefined){ // експериментально\n    dispatch(setUserStatus(data));\n    //}\n\n    // })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}\n\n/*export const updateProfilePhoto = (photo) => async (dispatch) => {\n    let data = await API.updateProfilePhoto(photo);\n    dispatch(setUserStatus(data));\n}*/\n\n\nexport const updateProfilePhoto = (photoFile) => async (dispatch) => {\n    // await API.updateProfilePhoto(photoFile)\n    // console.warn(photoFile);\n    let out = await API.updateProfilePhoto(photoFile);\n    // console.warn(out);\n    //dispatch(setUserLogOut());\n    dispatch(updateProfilePhotos(out.data.photos));\n\n}\n\n\nexport const setStatus = (status) => async (dispatch) => {\n    let promise1 = await API.setStatus(status)\n    await Promise.all([promise1])\n        .then( () => {\n            dispatch(setUserStatus(status));\n        })\n}\n\nexport const updateProfile = (profileObj) => async (dispatch,getState) => {\n\n    // console.log('updateProfile - 1')\n    const userId = getState().auth.userID;\n    // console.log('updateProfile - 2')\n\n    let data = await API.updateProfile(profileObj);\n    // .then(data => {\n    //dispatch(setUserStatus(status));\n    // console.log('updateProfile + ' + data.resultCode)\n    // console.log('updateProfile + ' + data.data)\n    // console.log(data)\n\n\n    if (data.resultCode === 0) {\n        // console.log('updateProfile +')\n        // dispatch(checkAuthorization());\n        //  dispatch(getProfile(profileObj.userId));\n\n        dispatch(getProfile(userId));\n        dispatch(setProfileUpdated(true));\n        //\n        // let data = await Promise.all([promise1,promise2])\n        //     .then( () => {\n        //         console.log('finita')\n        //     })\n\n    } else {\n        //dispatch(setUserAuthError(data.messages.join('<br/>')));\n\n/*\n        let str = 'Invalid url format (Contacts->Facebook)';\n        let re = /\\((.*)\\)/i;\n        let found = str.match(re);\n        if(found !== null && found[0].length > 0){\n            let re2 = /\\-\\>(.*)\\)/\n            let found2 = found[0].match(re2);\n            if(found2 !== null && found2[1].length > 0){\n                console.log(found2[1].toLowerCase())\n            }else{\n                console.log(found[1].toLowerCase())\n            }\n\n        }*/\n\n        function deCapitalizeFirstLetter(string) {\n            return string.charAt(0).toLowerCase() + string.slice(1);\n        }\n\n        function parseErrors(e){\n            let erObj = {};\n            e.map((er)=> {\n                let re = /(.*)\\((.*)\\)/i;\n                let found = er.match(re);\n                if(found !== null && found[0].length > 0){ // if found anything\n                    let re2 = /\\-\\>(.*)/\n                    let found2 = found[2].match(re2);\n                    if(found2 !== null && found2[1].length > 0){ // if found arrow\n                        // console.log(deCapitalizeFirstLetter(found2[1]))\n                        let name = deCapitalizeFirstLetter(found2[1])\n                        erObj[name]= found[1];\n                    }else{\n                        // console.log(deCapitalizeFirstLetter(found[2]))\n                        let name = deCapitalizeFirstLetter(found[2])\n                        erObj[name] = found[1];\n                    }\n\n                }\n            })\n            return erObj;\n        }\n\n        // console.log(data.messages)\n         let errObj = parseErrors(data.messages);\n        // console.log(testObj)\n        // dispatch(stopSubmit('profileEdit', {_error: data.messages.join('|||')}));\n        // dispatch(stopSubmit('profileEdit', {'instagram': data.messages[0],'vk': data.messages[1]}));\n        dispatch(stopSubmit('profileEdit', errObj));\n        // return Promise.reject(data.messages.join('|||'));\n        // dispatch(stopSubmit('profileEdit', {}));\n/*\n        if (data.resultCode === 10) {\n            let data = await API.getCaptcha();\n            dispatch(setUserAuthCaptchaImg(data.url));\n            // todo зробити виведення помилок - а треба?\n        }*/\n    }\n\n    // })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}","import {API} from \"../api/api\";\n\nlet initialState = {\n    examplesList: [\n        // {id:1,name:'Галерея'},\n        // {id:2,name:'Страховой калькулятор'},\n    ]\n}\n\nconst SET_EXAMPLES = 'samurai_project/examples/SET_EXAMPLES';\nconst DEL_EXAMPLE = 'samurai_project/examples/DEL_EXAMPLE';\nconst ADD_EXAMPLE = 'samurai_project/examples/ADD_EXAMPLE';\n\nconst examples_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        // case GET_EXAMPLES:\n        //     return state;\n        //     break;\n        case SET_EXAMPLES:\n            // debugger\n            return {\n                ...state,\n                // examplesList: [...state.examplesList, ...action.examples]\n                examplesList: [...action.examples]\n            }\n        case DEL_EXAMPLE:\n            // debugger\n            return {\n                ...state,\n                // examplesList: [...state.examplesList, ...action.examples]\n                examplesList: state.examplesList.filter(ex => ex.id !== action.id)\n            }\n        case ADD_EXAMPLE:\n            // debugger\n            return {\n                ...state,\n                // examplesList: [...state.examplesList, ...action.examples]\n                examplesList: [...state.examplesList, action.example]\n            }\n        default:\n            return state;\n        //break;\n\n    }\n\n    //return state;\n}\n\nexport default examples_reducer;\n\n\nexport const setExamples = (examples) => {\n    return {type: SET_EXAMPLES, examples: examples};\n}\n\nexport const delExample = (id) => {\n    return {type: DEL_EXAMPLE, id};\n}\n\nexport const addNewExample = (example) => {\n    return {type: ADD_EXAMPLE, example};\n}\n\n\n// thunk-и\n\nexport const getExamples = () => async (dispatch) => {\n\n    let data = await API.getExamples()\n    // .get('https://social-network.samuraijs.com/api/1.0/users/?count=20&page=250')\n    // .then(data => {\n    // debugger\n    dispatch(setExamples(data.items))\n    // console.log(resp)\n    // })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}","module.exports = __webpack_public_path__ + \"static/media/kotigoroshko.70d84a67.jpg\";","import {checkAuthorization} from \"./auth_reducer\";\nimport {getGbPosts} from \"./gb_reducer\";\nimport {getUsers} from \"./users_reducer\";\nimport {getExamples} from \"./examples_reducer\";\nimport {API} from \"../api/api\";\nimport {getProfile, getStatus} from \"./profile_reducer\";\n\nconst SET_INITIALIZED = 'samurai_project/app/SET_INITIALIZED';\n//const SET_ERROR = 'SET_ERROR';\n\nlet initialState = {\n    initialized: false\n}\n\nconst app_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SET_INITIALIZED:\n            return {\n                ...state,\n                initialized: true,\n            }\n\n\n\n        default:\n            return state;\n\n    }\n\n}\n\nexport default app_reducer;\n\nexport const setInitialized = () => {\n    return {type: SET_INITIALIZED};\n}\n\n\nexport const initializeApp = () => async (dispatch) => {\n    let promise = dispatch(checkAuthorization())\n    let promise2 = dispatch(getGbPosts())\n    let promise3 = dispatch(getUsers())\n    let promise4 = dispatch(getExamples())\n    // let promise5 = dispatch(getProfile())\n    // let promise6 = dispatch(getStatus())\n    let data = await Promise.all([promise,promise2,promise3,promise4])\n     .then( () => {\n        dispatch(setInitialized())\n     })\n\n\n}\n\n\n// thunk-и\n//\n// export const checkAuthorization = () => {\n//     return (dispatch) => {\n//\n//         API.authMe()\n//             .then(data => {\n//                 if(data.resultCode === 0){\n//                     let {id, login, email} = data.data;\n//                     dispatch(setUserAuthData(id,email,login,true,null,null,null));\n//                     API.getProfile(id)\n//                         .then(data => {\n//                             if(data.resultCode === 0){\n//                                 dispatch(setUserAuthImg(data.photos.small))\n//                             }\n//                         })\n//                         .catch(error => {\n//                             console.warn(error);\n//                         });\n//                 }\n//             })\n//             .catch(error => {\n//                 console.warn(error);\n//             });\n//     }\n// }\n//\n//\n// export const logOut = () => {\n//     return (dispatch) => {\n//         API.logOut()\n//             .then(() => {\n//                 console.warn('logout2');\n//                 //dispatch(setUserLogOut());\n//                 dispatch(setUserAuthData(null,null,null,false,null,null,null));\n//\n//             })\n//             .catch(error => {\n//                 console.warn(error);\n//             });\n//     }\n// }\n//\n// export const login = (email,pass,remember,captcha) => {\n//     return (dispatch) => {\n//         API.auth(email,pass,remember,captcha)\n//             .then(data => {\n//                 console.log(data)\n//                 if(data.resultCode === 0){\n//                     console.log('login +')\n//                     dispatch(checkAuthorization());\n//                     /*API.authMe()\n//                         .then(data => {\n//                             if(data.resultCode === 0){\n//                                 let {id, login, email} = data.data;\n//                                 dispatch(setUserAuthData(id,email,login));\n//                                 API.getProfile(id)\n//                                     .then(data => {\n//                                         if(data.resultCode === 0){\n//                                             dispatch(setUserAuthImg(data.photos.small))\n//                                         }\n//                                     })\n//                                     .catch(error => {\n//                                         console.warn(error);\n//                                     });\n//                             }\n//                         })\n//\n//                         .catch(error => {\n//                             console.warn(error);\n//                         });*/\n//                 }else\n//                 {\n//                     //dispatch(setUserAuthError(data.messages.join('<br/>')));\n//\n//                     dispatch(stopSubmit('auth',{_error: data.messages.join('<br/>')}));\n//\n//                     if(data.resultCode === 10){\n//                         API.getCaptcha()\n//                             .then(data => {\n//                                 dispatch(setUserAuthCaptchaImg(data.url))\n//                             })\n//                             .catch(error => {\n//                                 console.warn(error);\n//                             });\n//\n//                         // todo зробити виведення помилок\n//                     }\n//                 }\n//\n//             })\n//             .catch(error => {\n//                 console.warn(error);\n//             });\n//\n//     }\n// }","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport preloader from \"../../images/rings.svg\";\n\nconst Preloader = () =>{\n    return <div>\n        <img src={preloader} alt={'loading...'} style={{width: 150+'px'}} />\n    </div>\n}\n/*\nclass Preloader extends React.Component{\n    render(){\n        return <div>\n            <img src={preloader} alt={'loading...'} style={{width: 150+'px'}} />\n        </div>\n    }\n}*/\n\nexport default connect()(Preloader)","import {API} from \"../api/api\";\n\nconst NEW_GB_POST_CHANGE = 'samurai_project/gb/NEW_GB_POST_CHANGE';\nconst ADD_GB_POST = 'samurai_project/gb/ADD_GB_POST';\nconst SET_GB_POSTS = 'samurai_project/gb/SET_GB_POSTS';\nconst DEL_GB_POST = 'samurai_project/gb/DEL_GB_POST';\n\nlet initialState = {\n    gbPosts: [\n        // {id: 1, text: 'перший пост', author: 'Вано', authorID: '177', authorAva: 'https://avatarfiles.alphacoders.com/576/57620.jpg', date: '02:15 05-07-2020'},\n        // {id: 2, text: 'пост №2', author: 'Марічка', authorID: '65', authorAva: 'https://avatarfiles.alphacoders.com/111/111521.png', date: '02:16 05-07-2020'},\n        // {id: 3, text: 'третій', author: 'Гоги', authorID: '443', authorAva: 'https://store.playstation.com/store/api/chihiro/00_09_000/container/UA/ru/999/EP3351-CUSA08250_00-AV00000000000128/1580140059000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000', date: '02:17 05-07-2020'},\n        // {id: 4, text: 'довгий 4-й пост для тесту, просто для тестууууу айл бі бек)))!!!11', author: 'Андрійко', authorID: '323', authorAva: 'https://avatarmaker.net/free-avatars/images/samurai.jpg', date: '02:18 05-07-2020'},\n\n    ],\n    newPostText: 'hi how are u?))',\n\n\n}\n\nconst gb_reducer = (state = initialState,action) => {\n    //debugger;\n\n    switch (action.type){\n\n        case ADD_GB_POST:\n            let d = new Date();\n            let time = parseInt(d.getTime()/1000);\n\n            let newPost = {\n                /*\n                    id: state.gbPosts.length + 1,\n                    text: action.text,\n                    author: 'Марічка',\n                    authorID: '65',\n                    authorAva: 'https://avatarfiles.alphacoders.com/111/111521.png',\n                    date: '02:16 23-07-2020',\n                */\n                answer: \"\",\n                answer_time: \"0\",\n                email: \"ddddd@mail.com\",\n                id: state.gbPosts.length + 1,\n                ip: \"\",\n                login: \"Марічка\",\n                status: \"1\",\n                text: action.text,\n                time: time,\n                ua: \"\"\n\n\n            }\n            return {\n                ...state,\n                gbPosts: [...state.gbPosts,newPost],\n                newPostText: ''\n            }\n\n        case NEW_GB_POST_CHANGE:\n            return {\n                ...state,\n                newPostText: action.changedText\n            }\n        case SET_GB_POSTS:\n            return {\n                ...state,\n                // gbPosts: [...state.gbPosts,...action.posts],\n                gbPosts: [...action.posts],\n            }\n        case DEL_GB_POST:\n            return {\n                ...state,\n                // gbPosts: [...state.gbPosts,...action.posts],\n                gbPosts: state.gbPosts.filter(post => post.id !== action.post_id )\n            }\n\n        default:\n            return state;\n\n    }\n\n\n}\n\nexport default gb_reducer;\n\n\nexport const addGBPost = (text) =>  {\n    return {type: ADD_GB_POST,text};\n}\n\nexport const newGBpostChange = (text) => {\n    return {type: NEW_GB_POST_CHANGE,changedText: text};\n}\n\nexport const setGBPosts = (posts) => {\n    return {type: SET_GB_POSTS, posts: posts};\n}\n\nexport const delGBpost = (post_id) => {\n    return {type: DEL_GB_POST, post_id: post_id};\n}\n\n\n// thunk-и\nexport const getGbPosts = () => async (dispatch) => {\n\n        let data = await API.getGbPosts()\n            // .then(data => {\n                dispatch(setGBPosts(data.items));\n    //         })\n    //         .catch(error => {\n    //             console.warn(error);\n    //         });\n    // }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3_SJs\",\"auth\":\"Header_auth__22ubL\",\"logout\":\"Header_logout__1UGPC\"};","module.exports = __webpack_public_path__ + \"static/media/zloy_admin.565b4950.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__rbGTo\",\"active\":\"Menu_active__1zJuV\"};","import * as axios from \"axios\";\n// import {setCurrentPage} from \"../redux/users_reducer\";\n\nlet apiKey = 'c5115442-0621-432c-8b99-a8efe085eda6'\n// let apiKey = '3db08625-24f8-429d-8bdb-ea405db0921e'\n// baseURL = 'https://wd.co.ua/api.php'\nlet baseURL = 'https://social-network.samuraijs.com/api/1.0/'\n// currPage = 4\nexport let instance = axios.create({\n    withCredentials: true,\n    baseURL: baseURL,\n    headers: {\n        'API-KEY': apiKey\n    }\n\n});\n\n\n/*********************************************************/\n\n\nlet apiKey2 = 'ada3692f-cdc4-4c82-9079-5847319d88fc';\nlet baseURL2 = 'https://wd.co.ua/api.php';\n\nexport const instance2 = axios.create({\n    withCredentials: true,\n    baseURL: baseURL2,\n    headers: {\n        'API-KEY': apiKey2\n    }\n\n});\n\nexport const API = {\n\n\n    getUsers(usersPerPage = 10, currentPage = 5) {\n/*\n        if((currentPage === -1 || currentPage === 255) && total !== -1){\n            currentPage = Math.ceil((total - 6590) / usersPerPage);\n\n            //setCurrentPage(currentPage);\n        }\n        if(currentPage === -1){\n            currentPage = 229;\n\n            //setCurrentPage(currentPage);\n        }*/\n        return instance\n            .get('users/?count=' + usersPerPage + '&page=' + currentPage)\n            .then(resp => {\n                    //console.log(resp);\n                    //resp.data.cp = currentPage;\n                    return resp.data\n                }\n            );\n    },\n\n    follow(id) {\n        return instance\n            .post('follow/' + id)\n            .then(resp => {\n                    return resp.data\n                }\n            );\n    },\n\n    unfollow(id) {\n        return instance\n            .delete('follow/' + id)\n            .then(resp => {\n                    return resp.data\n                }\n            );\n    },\n\n    async authMe() {\n        let resp = await instance\n            .get('auth/me');\n        return resp.data\n\n\n    },\n\n    getProfile(id) {\n\n        return instance\n            .get('profile/' + id)\n            .then(resp => {\n                    return resp\n                }\n            );\n    },\n\n    getStatus(id) {\n        return instance\n            .get('profile/status/' + id)\n            .then(resp => {\n                    return resp.data\n                }\n            );\n    },\n\n    setStatus(status) {\n        return instance\n            .put('profile/status/', {\n                status: status\n            })\n            .then(resp => {\n                    return resp.data\n                }\n            );\n    },\n\n\n    updateProfile(profileObj) {\n        return instance\n            .put('profile', profileObj/*{\n                userId: 11583,\n                lookingForAJob: false,\n                lookingForAJobDescription: 'уже есть',\n                fullName: 'WD',\n                aboutMe: 'Димыч, курсы - агонь!!!',\n                contacts: {\n                    github: '',\n                    vk: '',\n                    facebook: '',\n                    instagram: '',\n                    twitter: '',\n                    website: 'localhost.com',\n                    youtube: '',\n                    mainLink: '',\n                }\n            }*/)\n            .then(resp => {\n                    return resp.data\n                }\n            );\n    },\n\n    async updateProfilePhoto(photo) {\n        // https://docs.google.com/document/d/1ZSXmTzkgq_Kj1VbWuq8fTv_DPD95GFDvPZgqFeIYGoM/edit#heading=h.nnpkrs1rgfrd\n\n        const formData = new FormData();\n        formData.append('image', photo)\n        let resp = await instance\n            .put('profile/photo', formData,{ headers: {\"Content-Type\": \"multipart/form-data\" }});\n        return resp.data;\n    },\n\n\n    auth(email, pass, remember = true, captcha = false) {\n        // console.log(email, pass, remember, captcha)\n        return instance\n            .post('auth/login', {\n                email: email,\n                password: pass,\n                rememberMe: remember,\n                captcha: captcha,\n\n            })\n            .then(resp => {\n                    return resp.data\n                }\n            );\n    },\n\n    logOut() {\n        // console.log('logout1')\n        return instance\n            .delete('auth/login')\n            .then(resp => {\n                    // console.log('logout')\n                    return resp.data\n                }\n            );\n    },\n\n\n    getCaptcha() {\n        return instance\n            .get('security/get-captcha-url')\n            .then(resp => {\n                    return resp.data\n                }\n            );\n    },\n\n\n    getExamples() {\n        return instance2\n            .get('?action=get_examples')\n            .then(resp => {\n                    return resp.data\n                }\n            );\n    },\n\n    getGbPosts() {\n        return instance2\n            .get('?action=get_gb_posts')\n            .then(resp => {\n                    return resp.data\n                }\n            );\n    }\n}","\nimport kot from \"../images/kotigoroshko.jpg\"\nimport za from \"../images/zloy_admin.png\"\n\nconst ADD_CHAT_POST = 'samurai_project/chat/ADD_CHAT_POST';\nconst DEL_CHAT_POST = 'samurai_project/chat/DEL_CHAT_POST';\nconst NEW_CHAT_POST_CHANGE = 'samurai_project/chat/NEW_CHAT_POST_CHANGE';\n//const GET_CHAT_NEW_POST_TEXT = 'GET_CHAT_NEW_POST_TEXT';\n\nlet initialState = {\n    chatPosts: [\n        {id: 1, author: 'Котигорошко', authorAva: kot, text: 'Привіт, ти тут?', date: '15:25 17-08-2020'},\n        {id: 2, author: 'Admin', authorAva: za, text: 'Привіт, так', date: '15:26 17-08-2020'},\n        {id: 3, author: 'Котигорошко', authorAva: kot, text: 'а ти можеш зробити мені сайт візитку?', date: '15:27 17-08-2020'},\n        {id: 4, author: 'Котигорошко', authorAva: kot, text: 'і форум... скільки то буде коштувати?', date: '15:28 17-08-2020'},\n        {id: 5, author: 'Admin', authorAva: za, text: '$17 000', date: '15:29 17-08-2020'},\n        {id: 6, author: 'Котигорошко', authorAva: kot, text: 'Норм, давай реквізити, скину аванс ;)', date: '15:33 17-08-2020'},\n    ],\n    newChatPostText: 'this is Sparta!',\n}\n\nconst chat_reducer = (state = initialState,action) => {\n\n    switch (action.type){\n        case ADD_CHAT_POST:\n            let newChatPost = {\n                id: state.chatPosts.length + 1,\n                author: 'Котигорошко',\n                authorAva: kot,\n                text: action.text,\n                date: '15:25 17-09-2020'\n            }\n            return {\n                ...state,\n                chatPosts: [...state.chatPosts,newChatPost],\n                newChatPostText: ''\n            }\n\n\n        case NEW_CHAT_POST_CHANGE:\n            return {\n                ...state,\n                newChatPostText: action.changedText\n            }\n        case DEL_CHAT_POST:\n            return {\n                ...state,\n                chatPosts: state.chatPosts.filter(ch => ch.id !== action.id)\n            }\n\n        default:\n            return state;\n            //break;\n\n    }\n\n}\n\nexport default chat_reducer;\n\n\nexport const addChatPost = (text) =>  {\n    return {type: ADD_CHAT_POST, text};\n}\nexport const newChatPostChange = (text) => {\n    return {type: NEW_CHAT_POST_CHANGE,changedText: text};\n}\nexport const delChatPost = (id) => {\n    return {type: DEL_CHAT_POST,id};\n}\n// export const getChatNewPostText = () =>  {\n//     return {type: GET_CHAT_NEW_POST_TEXT};\n// }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3de2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example\":\"Example_example__3UoYE\"};","module.exports = __webpack_public_path__ + \"static/media/rings.5fe3cf7c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copy\":\"Footer_copy__33kv9\"};","module.exports = __webpack_public_path__ + \"static/media/logout.264a22fb.png\";"],"sourceRoot":""}